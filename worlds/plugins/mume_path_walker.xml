<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- This Source Code Form is subject to the terms of the Mozilla Public -->
<!-- License, v. 2.0. If a copy of the MPL was not distributed with this -->
<!-- file, You can obtain one at http://mozilla.org/MPL/2.0/. -->

<!-- Saved on Saturday, February 18, 2012, 8:31 PM -->
<!-- MuClient version 4.81 -->

<!-- Plugin "mume_path_walker" generated by Plugin Wizard -->

<muclient>
<plugin
   name="mume_path_walker"
   author="Nick Stockton"
   id="052dd7f4b9c2157c133bdf75"
   language="Lua"
   purpose="Automaticly follow roads, Sunscreen for trolls, etc."
   date_written="2012-02-18 20:29:28"
   requires="4.70"
   version="1.0"
   >

</plugin>


<!--  Get our standard constants -->

<include name="constants.lua"/>

<aliases>
  <alias
   match="p *"
   enabled="y"
   group="mume_path_walker"
   send_to="12"
   sequence="100"
  >
<send>pathStart("%1")</send>
  </alias>
  <alias
   match="pp"
   enabled="y"
   group="mume_path_walker"
   send_to="12"
   sequence="100"
  >
<send>pathStop()</send>
  </alias>
</aliases>


<script>
<![CDATA[
require("mystdlib")

screenReader = "925cdd0331023d9f0b8f05a7"
xml_parser = "74834d3734b2c8a3a9da4d18"
roomName = ""
pathWalkEnabled = false
lastDirection = ""

function OnPluginBroadcast (msg, id, name, text)
	if id == xml_parser and name == "mume_xml_parser" and msg == 1 then
		local return_code
		return_code, roomName = CallPlugin(xml_parser, "get", "name")
		if pathWalkEnabled then
			local return_code, exits_line = CallPlugin(xml_parser, "get", "exits")
			pathWalkNext(exits_line)
		end
	end
end

function pathWalkNext(line)
	line = string.gsub(line, "^", "")
	local directions = {}
	local directionsSet = {}
	if string.match(line, "=north=") then
		if lastDirection ~= "south" then
			directions[#directions+1] = "north"
		end
		table.addToSet(directionsSet, "north")
	end
	if string.match(line, "=south=") then
		if lastDirection ~= "north" then
			directions[#directions+1] = "south"
		end
		table.addToSet(directionsSet, "south")
	end
	if string.match(line, "=east=") then
		if lastDirection ~= "west" then
			directions[#directions+1] = "east"
		end
		table.addToSet(directionsSet, "east")
	end
	if string.match(line, "=west=") then
		if lastDirection ~= "east" then
			directions[#directions+1] = "west"
		end
		table.addToSet(directionsSet, "west")
	end
	if string.match(line, "=up=") then
		if lastDirection ~= "down" then
			directions[#directions+1] = "up"
		end
		table.addToSet(directionsSet, "up")
	end
	if string.match(line, "=down=") then
		if lastDirection ~= "up" then
			directions[#directions+1] = "down"
		end
		table.addToSet(directionsSet, "down")
	end
	if #directions == 1 then
		lastDirection = directions[1]
		Send(lastDirection)
	elseif #directions == 0 then
		if roomName=="The East Road" or roomName=="Inside the Small Village of Frogmorton" or roomName=="Michel Delving" or roomName=="Road to Grey Havens" or roomName=="A Ford on the Way to Tharbad" then
			pathStart(lastDirection)
		elseif roomName=="Road to Tharbad" then
			if lastDirection == "south" then
				pathStart("east")
			elseif lastDirection == "west" then
				pathStart("west")
			end
		else
			pathStop()
			CallPlugin(screenReader, "sayNote", "End of road reached.")
		end
	else
		if (roomName=="A Fork" or roomName=="Greenholm Junction") and (lastDirection=="east" or lastDirection=="west") then
			pathStart(lastDirection)
		elseif roomName == "Waymeet" and (lastDirection=="west" or lastDirection=="north") then
			if lastDirection == "west" then
				pathStart("south")
			elseif lastDirection == "north" then
				pathStart("east")
			end
		elseif roomName == "The Crossroad" and (lastDirection=="south" or lastDirection=="west") then
			if lastDirection == "south" then
				pathStart("east")
			elseif lastDirection == "west" then
				pathStart("north")
			end
		elseif roomName == "Road to Tharbad" then
			if table.setContains(directionsSet, "north") and table.setContains(directionsSet, "south") and table.setContains(directionsSet, "west") and lastDirection~="south" and lastDirection~="west" then
				if lastDirection == "east" then
					pathStart("south")
				elseif lastDirection == "north" then
					pathStart("west")
				end
			elseif table.setContains(directionsSet, "north") and table.setContains(directionsSet, "east") and table.setContains(directionsSet, "south") and lastDirection~="north" then
				if lastDirection == "south" then
					pathStart("east")
				elseif lastDirection == "west" then
					pathStart("north")
				end
			elseif table.setContains(directionsSet, "east") and table.setContains(directionsSet, "west") and table.setContains(directionsSet, "south") and lastDirection~="north" then
				pathStart(lastDirection)
			end
		elseif roomName == "Greenway" then
			if table.setContains(directionsSet, "north") and table.setContains(directionsSet, "south") and table.setContains(directionsSet, "west") and lastDirection~="east" then
				pathStart(lastDirection)
			elseif table.setContains(directionsSet, "north") and table.setContains(directionsSet, "east") and table.setContains(directionsSet, "west") then
				if lastDirection == "west" then
					pathStart("north")
				elseif lastDirection=="east" or lastDirection=="south" then
					pathStart("east")
				end
			end
		elseif roomName == "The East Road" then
			if table.setContains(directionsSet, "east") and table.setContains(directionsSet, "west") and table.setContains(directionsSet, "south") and lastDirection~="north" then
				pathStart(lastDirection)
			elseif table.setContains(directionsSet, "east") and table.setContains(directionsSet, "south") and table.setContains(directionsSet, "north") and lastDirection~="south" then
				if lastDirection == "north" then
					pathStart("east")
				elseif lastDirection == "west" then
					pathStart("south")
				end
			elseif table.setContains(directionsSet, "west") and table.setContains(directionsSet, "north") and table.setContains(directionsSet, "south") and lastDirection~="north" then
				if lastDirection == "east" then
					pathStart("north")
				elseif lastDirection == "south" then
					pathStart("west")
				end
			end
		else
			pathStop()
			CallPlugin(screenReader, "sayNote", "Junction reached.")
		end
	end
end

function pathStart(line)
	local dirs = {"north", "south", "east", "west", "up", "down"}
	local direction = nil
	for i, v in ipairs(dirs) do
		if line~="" and string.sub(v, 1, string.len(line))==line then
			direction = v
			break
		end
	end
	if direction then
		pathWalkEnabled = true
		lastDirection = direction
		Send(lastDirection)
	else 
		CallPlugin(screenReader, "sayNote", "Invalid starting direction")
	end
end

function pathStop()
	pathWalkEnabled = false
	CallPlugin(screenReader, "sayNote", "Path Walker Disabled.")
end

]]>
</script>


</muclient>
