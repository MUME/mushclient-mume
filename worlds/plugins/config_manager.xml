<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- This Source Code Form is subject to the terms of the Mozilla Public -->
<!-- License, v. 2.0. If a copy of the MPL was not distributed with this -->
<!-- file, You can obtain one at http://mozilla.org/MPL/2.0/. -->

<!-- Saved on Thursday, October 15, 2015, 2:12 PM -->
<!-- MuClient version 4.60 -->

<!-- Plugin "config_manager" generated by Plugin Wizard -->

<muclient>
<plugin
   name="config_manager"
   author="Nick Stockton"
   id="d19a2f0a604c96b7318aa67f"
   sequence="10"
   language="Lua"
   purpose="Configuration database manager for plugins"
   date_written="2015-10-15 14:12:30"
   requires="4.60"
   version="1.0"
   >

</plugin>

<!--  Get our standard constants -->

<include name="constants.lua"/>
<script>
<![CDATA[
require("mystdlib")
json = require("dkjson")

CONFIG_FILE = string.format("%sdatabases\\config.json", GetInfo(67))
SAMPLE_CONFIG_FILE = string.format("%sdatabases\\config.json.sample", GetInfo(67))

if os.isFile(CONFIG_FILE) then
	fileObj = io.open(CONFIG_FILE, "rb")
	config = json.decode(fileObj:read("*all"), 1, nil)
	fileObj:close()
elseif os.isFile(SAMPLE_CONFIG_FILE) then
	fileObj = io.open(SAMPLE_CONFIG_FILE, "rb")
	config = json.decode(fileObj:read("*all"), 1, nil)
	fileObj:close()
else
	config = {}
end

function set(key, value)
	config[key] = value
	local orderedKeys = {}
	for k, v in pairs(config) do
		table.insert(orderedKeys, k)
	end
	table.sort(orderedKeys)
	local fileObj = io.open(CONFIG_FILE, "wb")
	fileObj:write(json.encode(config, {indent=true, level=0, keyorder=orderedKeys}))
	fileObj:close()
end

function get(key)
	return config[key]
end

]]>            
 </script> 
</muclient>
