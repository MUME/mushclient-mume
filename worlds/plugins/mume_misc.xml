<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- This Source Code Form is subject to the terms of the Mozilla Public -->
<!-- License, v. 2.0. If a copy of the MPL was not distributed with this -->
<!-- file, You can obtain one at http://mozilla.org/MPL/2.0/. -->

<!-- Saved on Thursday, August 23, 2012, 7:27 PM -->
<!-- MuClient version 4.81 -->

<!-- Plugin "mume_misc" generated by Plugin Wizard -->

<muclient>
<plugin
   name="mume_misc"
   author="Nick Stockton"
   id="ad20dd80cbd7c2fea78ce15c"
   language="Lua"
   purpose="Misc aliases and triggers that don't belong anywhere else."
   date_written="2012-08-23 19:24:49"
   requires="4.70"
   version="1.0"
   >

</plugin>


<!--  Get our standard constants -->

<include name="constants.lua"/>

<!--  Triggers  -->

<triggers>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^A citizen mercenary (?:\(\w+\) )?(?:snuffs|lights) a lantern\.$"
   name="omit_merc_lanterns"
   omit_from_output="y"
   regexp="y"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^    \:                          \*\*     (?P&lt;direction&gt; [NEW]|S[EW])    \*\*                             \:   $"
   name="auto_move_stakes"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
if auto_move_stakes then
	move_stakes(REVERSED_STAKES[string.strip("%&lt;direction&gt;")])
	auto_move_stakes = false
end
  </send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^A (?:great\, dark|horrible\, dark-green) spider quickly begins to weave a tight\, sticky web around your body\!$"
   name="bm_spiders1"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>CallPlugin(TTS, "silence")
Note("Flee if solo!")
  </send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^A (?:great\, dark|horrible\, dark-green) spider burdens your movement wrapping you layer after layer\!$"
   name="bm_spiders2"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>CallPlugin(TTS, "silence")
Note("Flee if grouped!")
  </send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^You stagger for your balance as a (?:great\, dark|horrible\, dark-green) spider wraps the sticky cords faster and faster around you\!$"
   name="bm_spiders3"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>CallPlugin(TTS, "silence")
Note("Narrate for help!")
  </send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^After some struggle you remove the last web on you\.$"
   name="bm_spiders4"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>CallPlugin(TTS, "silence")
Note("Web removed!")
  </send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^There is an old street\-lamp on the border of the street\.$"
   name="gag_street_lamps"
   omit_from_output="y"
   regexp="y"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^(?:You grasp the corpse and start dragging it\.|You are already dragging it\!)$"
   name="auto_drag_next"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>
if auto_drag then
	auto_drag_counter = auto_drag_counter + 1
	Send(string.format("drag %s.corpse", auto_drag_counter))
else
	Note("%0")
end
  </send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^You do not see anything like that\.$"
   name="auto_drag_complete"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>
if auto_drag then
	Note("Now dragging all corpses.")
	auto_drag_counter = 1
	auto_drag = false
else
	Note("%0")
end
  </send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^(?P&lt;player&gt;.+?) joins (?P&lt;tank&gt;.+?)'s fight\.$"
   name="shorten_assists"
   omit_from_output="y"
   regexp="y"
   send_to="2"
   sequence="100"
  >
  <send>%&lt;player&gt; assists %&lt;tank&gt;!</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^(?P&lt;someone&gt;.+?) leaves (?P&lt;direction&gt;north|east|south|west|up|down)\.$"
   name="shorten_leaves_message"
   omit_from_output="y"
   regexp="y"
   send_to="2"
   sequence="80"
  >
  <send>%&lt;direction&gt; %&lt;someone&gt;</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^Is playing from \*\.(?P&lt;alpha2&gt;[a-z]{2,2})\.$"
   name="translate_country_codes"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>
if country_codes["%&lt;alpha2&gt;"] then
	Note(string.format("%0 (%s)", country_codes["%&lt;alpha2&gt;"]))
else
	Note("%0")
end
  </send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="You have been idle, and are pulled into a void."
   name="no_void"
   sequence="100"
  >
  <send>wake
stand
lead
train all</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^ACK\! .+? didn\'t follow you\, you lost (him|her|it)\.$"
   name="beep_on_ack"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Tell("\a")</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^(Nah\.\.\. You feel too relaxed to do that\.|Maybe you should get on your feet first\?|You can\'t do this sitting\!|You can\'t concentrate enough while resting\.|Not from your present position\!)$"
   name="auto_stand"
   regexp="y"
   sequence="100"
  >
  <send>stand</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="Prompt set to None."
   name="always_show_prompt"
   sequence="100"
  >
  <send>change prompt all</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^(?:Prompt set to All|Your prompt will display twiddlers when you are busy)\.$"
   name="keep_twiddlers_off"
   sequence="100"
   regexp="y"
  >
  <send>change prompt twiddlers</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="You can only gain one level at a time... Reduced experience."
   name="beep_on_reduced_xp"
   send_to="12"
   sequence="100"
  >
  <send>Tell("\a")</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^(Welcome to the land of Middle\-earth\. May your visit here be\.\.\. interesting\.|Reconnecting\.)$"
   name="do_stuff_after_login"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
-- Negotiate echo back on.
-- If this is not done, command history in MushClient won't work.
SendPkt(string.char(255, 253, 1))
Send("change compact on")
Send("change spam off")
Send("change brief on")
Send("change wordwrap off")
Send("change prompt all")</send>
  </trigger>
</triggers>

<!--  Aliases  -->

<aliases>
  <alias
   name="show_prompt"
   match="showprompt"
   enabled="y"
   group="mume_misc"
   send_to="12"
   sequence="100"
  >
  <send>toggle_show_prompt()</send>
  </alias>
  <alias
   name="show_level"
   match="lev"
   enabled="y"
   group="mume_misc"
   send_to="12"
   sequence="100"
  >
  <send>Send("info %l")</send>
  </alias>
  <alias
   name="drag_all"
   match="dragall"
   enabled="y"
   group="mume_misc"
   send_to="12"
   sequence="100"
  >
  <send>
auto_drag = true
auto_drag_counter = 1
Send("drag 1.corpse")
  </send>
  </alias>
  <alias
   name="move_stakes"
   match="movestakes"
   enabled="y"
   group="mume_misc"
   ignore_case="y"
   send_to="12"
   sequence="100"
  >
  <send>
auto_move_stakes = true
Send("look star")
  </send>
  </alias>
  <alias
   name="butcher_corpses"
   match="^bc(?:\s*(?P&lt;digit&gt;\d+))?$"
   enabled="y"
   group="mume_misc"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Send(string.format("butcher %s.corpse", "%&lt;digit&gt;" ~= "" and "%&lt;digit&gt;" or "1"))</send>
  </alias>
  <alias
   name="money_info"
   match="money"
   enabled="y"
   group="mume_misc"
   sequence="100"
  >
  <send>info %%r</send>
  </alias>
  <alias
   name="affected_by_info"
   match="affect"
   enabled="y"
   group="mume_misc"
   sequence="100"
  >
  <send>info %%f</send>
  </alias>
  <alias
   name="age_info"
   match="age"
   enabled="y"
   group="mume_misc"
   sequence="100"
  >
  <send>info %%a years, %%N months, and %%n days old. Played for %%P hours realtime.</send>
  </alias>
  <alias
   name="alignment_info"
   match="align"
   enabled="y"
   group="mume_misc"
   sequence="100"
  >
  <send>info %%q</send>
  </alias>
  <alias
   name="citizen_list_info"
   match="citizen"
   enabled="y"
   group="mume_misc"
   sequence="100"
  >
  <send>info %%c</send>
  </alias>
  <alias
   name="weight_carried_info"
   match="weight"
   enabled="y"
   group="mume_misc"
   sequence="100"
  >
  <send>info %%C, %%F</send>
  </alias>
  <alias
   name="look_in"
   match="li *"
   enabled="y"
   group="mume_misc"
   sequence="100"
  >
  <send>look in %1</send>
  </alias>
  <alias
   name="switch_cloak_from_pouch"
   match="cpouch"
   enabled="y"
   group="mume_misc"
   sequence="100"
  >
  <send>remove cloak
remove fur
get cloak pouch
wear cloak
put cloak pouch
put fur pouch</send>
  </alias>
  <alias
   name="switch_fur_from_pack"
   match="fpack"
   enabled="y"
   group="mume_misc"
   sequence="100"
  >
  <send>remove cloak
remove fur
get fur pack
wear fur
put cloak pack
put fur pack</send>
  </alias>
  <alias
   name="wake_stand"
   match="ws"
   enabled="y"
   group="mume_misc"
   sequence="100"
  >
  <send>wake
stand</send>
  </alias>
  <alias
   name="Switch_cloak_from_pack"
   match="cpack"
   enabled="y"
   group="mume_misc"
   sequence="100"
  >
  <send>remove cloak
remove fur
get cloak pack
wear cloak
put cloak pack
put fur pack</send>
  </alias>
  <alias
   name="switch_boots_from_pouch"
   match="bpouch"
   enabled="y"
   group="mume_misc"
   sequence="100"
  >
  <send>remove boots
get boots pouch
wear boots
put boots pouch</send>
  </alias>
  <alias
   name="switch_boots_from_pack"
   match="bpack"
   enabled="y"
   group="mume_misc"
   sequence="100"
  >
  <send>remove boots
get boots backpack
wear boots
put boots backpack</send>
  </alias>
</aliases>

<script>
<![CDATA[
require("mystdlib")
json = require("dkjson")
COUNTRY_CODES_FILE = string.format("%sdatabases\\country_codes.json", GetInfo(67))

if os.isFile(COUNTRY_CODES_FILE) then
	fileObj = io.open(COUNTRY_CODES_FILE, "rb")
	country_codes = json.decode(fileObj:read("*all"), 1, nil)
	fileObj:close()
else
	country_codes = {}
end

PROMPT_REGEX = rex.new([[^(?P<light>[\@\*\!\)o])?(?P<terrain>[\#\(\[\+\.\%fO\~UW\:\=\<])?(?P<weather>[\*\'\"\~\=\-]{1,2})?(?P<movement_flags> [RrSsCcW]{1,4})?(?P<hp> HP\:\w+)?(?P<mp> Mana\:\w+)?(?P<mv> Move\:\w+)?(?P<mount> Mount\:\w+)?(?P<fighting> [^\:]+\:\w+)?(?P<buffer> [^\:]+\:\w+)?.*?>$]])

TERRAIN_SYMBOLS = {
	[":"] = "brush",
	["O"] = "cavern",
	["#"] = "city",
	["."] = "field",
	["f"] = "forest",
	["("] = "hills",
	["["] = "indoors",
	["<"] = "mountains",
	["W"] = "rapids",
	["+"] = "road",
	["%"] = "shallow water",
	["="] = "tunnel",
	["U"] = "under water",
	["~"] = "water"
}

LIGHT_SYMBOLS = {
	["@"] = "lit at",
	["*"] = "sun light",
	["!"] = "artificial light",
	[")"] = "moon light",
	["o"] = "darkness"
}

REVERSED_STAKES = {
	["N"] = "N",
	["W"] = "E",
	["SW"] = "SE",
	["SE"] = "SW",
	["E"] = "W"
}

TTS = "925cdd0331023d9f0b8f05a7"
CONFIG = "d19a2f0a604c96b7318aa67f"
XML_PARSER = "74834d3734b2c8a3a9da4d18"
return_code, show_prompt = CallPlugin(CONFIG, "get", "show_prompt")
auto_move_stakes = false
auto_drag = false
auto_drag_counter = 1
last_prompt = nil
last_fought = "Unknown last fought"

function OnPluginBroadcast (msg, id, name, text)
	if id == XML_PARSER and name == "mume_xml_parser" and msg == 1 then
		local return_code, prompt = CallPlugin(XML_PARSER, "get", "prompt")
		if not prompt then
			return
		elseif show_prompt then
			Note(prompt)
		end
		local starting, ending, match = PROMPT_REGEX:match(prompt)
		if not match then
			return
		end
		last_prompt = {
			["light"] = match["light"] and LIGHT_SYMBOLS[match["light"]] or "Unknown light",
			["terrain"] = match["terrain"] and TERRAIN_SYMBOLS[match["terrain"]] or "Unknown terrain",
			["flags"] = match["movement_flags"] and string.strip(string.format("%s%s%s%s", string.match(match["movement_flags"], "[S]") and "Sneaking " or string.match(match["movement_flags"], "[s]") and "NoSneak " or "", string.match(match["movement_flags"], "[W]") and "Swimming " or "", string.match(match["movement_flags"], "[C]") and "Climbing " or string.match(match["movement_flags"], "[c]") and "Climbing safely " or "", string.match(match["movement_flags"], "[R]") and "Riding " or string.match(match["movement_flags"], "[r]") and "Ridden " or "")) or "No movement flags",
			["sneak"] = match["movement_flags"] and (string.match(match["movement_flags"], "[S]") and "Sneaking" or string.match(match["movement_flags"], "[s]") and "NoSneak") or "Off",
			["hp"] = match["hp"] and string.split(match["hp"], ":")[2] or "Healthy",
			["mp"] = match["mp"] and string.split(match["mp"], ":")[2] or "Full",
			["mv"] = string.format("%s %s", match["mv"] and string.split(match["mv"], ":")[2] or "Rested", match["movement_flags"] and string.match(match["movement_flags"], "[R]") and (match["mount"] and string.split(match["mount"], ":")[2] or "Rested") or "Not riding"),
			["fighting"] = string.format("%s %s", match["fighting"] and string.split(match["fighting"], ":")[2] or "Unknown", match["fighting"] and string.strip(string.split(match["fighting"], ":")[1]) or "Not fighting"),
			["buffer"] = string.format("%s %s", match["buffer"] and string.split(match["buffer"], ":")[2] or "Unknown", match["buffer"] and string.strip(string.split(match["buffer"], ":")[1]) or "No buffer")
		}
		if last_prompt["fighting"] ~= "Unknown Not fighting" then
			last_fought = string.format("%s last fought", last_prompt["fighting"])
		end
	end
end

function toggle_show_prompt()
	show_prompt = not show_prompt
	CallPlugin(CONFIG, "set", "show_prompt", show_prompt)
	Note(string.format("Show prompt %s.", show_prompt and "on" or "off"))
end

function speak_prompt(key)
	CallPlugin(TTS, "silence")
	if not last_prompt then
		CallPlugin(TTS, "say", "No prompt")
	elseif key == "last_fought" then
		CallPlugin(TTS, "say", last_fought)
	elseif not last_prompt[key] then
		CallPlugin(TTS, "say", "Unknown")
	else
		CallPlugin(TTS, "say", last_prompt[key])
	end
end

function move_stakes(direction)
	local dir_values = {"N", "E", "SE", "SW", "W"}
	local dir_total = #dir_values
	local dir_keys = {}
	for key, value in pairs(dir_values) do
		dir_keys[value] = key
	end
	if not dir_keys[direction] then
		Note(string.format("Invalid direction '%s': Must be one of %s.", direction, table.concat(dir_values, ", ")))
		return
	end
	local stakes = {"Forostar", "Orrostar", "Hyarrostar", "Hyarnustar", "Andustar"}
	local orientation = dir_keys[direction] - 1
	local stake_counter = 1
	for i = orientation, orientation + (dir_total - 1) do
		Send(string.format("move %s %s", stakes[stake_counter], dir_values[i % dir_total + 1]))
		stake_counter = stake_counter + 1
	end
	Send("move Mittalmar centre")
end

]]>
</script>

</muclient>
