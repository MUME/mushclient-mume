<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- This Source Code Form is subject to the terms of the Mozilla Public -->
<!-- License, v. 2.0. If a copy of the MPL was not distributed with this -->
<!-- file, You can obtain one at http://mozilla.org/MPL/2.0/. -->

<!-- Saved on Thursday, August 23, 2012, 7:27 PM -->
<!-- MuClient version 4.81 -->

<!-- Plugin "mume_misc" generated by Plugin Wizard -->

<muclient>
<plugin
   name="mume_misc"
   author="Nick Stockton"
   id="ad20dd80cbd7c2fea78ce15c"
   language="Lua"
   purpose="Misc aliases and triggers that don't belong anywhere else."
   date_written="2012-08-23 19:24:49"
   requires="4.70"
   version="1.0"
   >

</plugin>


<!--  Get our standard constants -->

<include name="constants.lua"/>

<!--  Triggers  -->

<triggers>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^[ ]{12}[~]{3}$"
   name="gag_ascii_art"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>
ascii_art_lines = 18
EnableTrigger("gag_ascii_art", false)
  </send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="You raise your staff and call upon the Valar."
   name="have_bless_staff"
   send_to="12"
   sequence="100"
  >
  <send>have_bless_staff = true</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="The light of Aman fades away from you."
   name="auto_use_bless_staff"
   send_to="12"
   sequence="100"
  >
  <send>
if have_bless_staff and auto_use_bless_staff then
	Send("use staff")
end
  </send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^.+? is (?:incapacitated|mortally wounded|stunned) and will (?:slowly |probably )?die[,]? (?:soon[ ]?)?(?:if not aided)?\.$"
   name="auto_kick"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
if auto_kick then
	Send("kick")
end
  </send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="a string of dwarven bones"
   omit_from_output="y"
   send_to="2"
   sequence="100"
  >
  <send>%0 (BM citizenship quest and HOB, Moria)</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^(?:&lt;worn on feet&gt;[ ]{7})?a soft pair of padded boots \(flawless\)(?:[;] it glows blue)?$"
   omit_from_output="y"
   regexp="y"
   send_to="2"
   sequence="100"
  >
  <send>%0 (NoTracks, Tharbad Chief)</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^(?:&lt;wielded&gt;[ ]{12})?the silvery broadsword \(flawless\)(?:[;] it glows blue)?(?:[;] it has a soft glowing aura)?$"
   omit_from_output="y"
   regexp="y"
   send_to="2"
   sequence="100"
  >
  <send>%0 (Mithvegil, WC)</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^(?:&lt;wielded&gt;[ ]{12})?the gleaming broadsword \(flawless\)(?:[;] it glows blue)?$"
   omit_from_output="y"
   regexp="y"
   send_to="2"
   sequence="100"
  >
  <send>%0 (Defense sword, dragon)</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^(?:&lt;wielded&gt;[ ]{12})?the broad Elven blade \(flawless\)(?:[;] it glows blue)?(?:[;] it has a soft glowing aura)?$"
   omit_from_output="y"
   regexp="y"
   send_to="2"
   sequence="100"
  >
  <send>%0 (Glamdring, BBT)</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^(?:&lt;wielded&gt;[ ]{12})?the slender Elven sword \(flawless\)(?:[;] it glows blue)?(?:[;] it has a soft glowing aura)?$"
   omit_from_output="y"
   regexp="y"
   send_to="2"
   sequence="100"
  >
  <send>%0 (ORCRIST, BBT)</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^(?:&lt;wielded&gt;[ ]{12})?the Elven shortsword with a runic inscription \(flawless\)(?:[;] it glows blue)?(?:[;] it has a soft glowing aura)?$"
   omit_from_output="y"
   regexp="y"
   send_to="2"
   sequence="100"
  >
  <send>%0 (Sting, BBT)</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^A citizen mercenary(?: \((?P&lt;label&gt;\w+)\))? says &apos;(?:Sorry\, my|My daily) fee is (?P&lt;mercenary_payment&gt;\d+) silver[^\.]+\.&apos;$"
   name="pay_mercenary"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
mercenary_payment = "%&lt;mercenary_payment&gt;"
Send("give ", mercenary_payment, " silver ", "%&lt;label&gt;" == "" and "mercenary" or "%&lt;label&gt;")
Send("give ", mercenary_payment, " celeb ", "%&lt;label&gt;" == "" and "mercenary" or "%&lt;label&gt;")
  </send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^A citizen mercenary(?: \((?P&lt;label&gt;\w+)\))? taps you on the shoulder\.$"
   name="repay_mercenary"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
Send("give ", mercenary_payment, " silver ", "%&lt;label&gt;" == "" and "mercenary" or "%&lt;label&gt;")
Send("give ", mercenary_payment, " celeb ", "%&lt;label&gt;" == "" and "mercenary" or "%&lt;label&gt;")
  </send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^A wight\-noble(?: \(\w+\))? disappears into nothing\.$"
   name="count_nobles"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>
nobles_dead = (nobles_dead + 1) % 10
if nobles_dead == 0 then
	Note("10 nobles dead! Resetting.")
else
	Note(nobles_dead, " noble", nobles_dead > 1 and "s" or "", " dead!")
end
  </send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^Your bash at (?:a[n]? |the )?(?P&lt;someone&gt;.+?)(?: \((?P&lt;someone_label&gt;\w+)\))? sends (?:him|her|it) sprawling\.$"
   name="bash_target"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>Note("You bash ", "%&lt;someone_label&gt;" ~= "" and "%&lt;someone_label&gt;" or "%&lt;someone&gt;")</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^As (?:a[n]? |the )?(?P&lt;someone&gt;.+?)(?: \((?P&lt;someone_label&gt;\w+)\))? avoids your bash\, you topple over and lose your balance\.$"
   name="bash_fail_target"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>Note("You fail bash ", "%&lt;someone_label&gt;" ~= "" and "%&lt;someone_label&gt;" or "%&lt;someone&gt;")</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^You dodge a bash from (?:a[n]? |the )?(?P&lt;someone&gt;.+?)(?: \((?P&lt;someone_label&gt;\w+)\))? who loses (?:his|her|its) balance\.$"
   name="bash_fail_you"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>Note("Failed bash from ", "%&lt;someone_label&gt;" ~= "" and "%&lt;someone_label&gt;" or "%&lt;someone&gt;")</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="Your head stops stinging."
   name="bash_recover_you"
   omit_from_output="y"
   send_to="2"
   sequence="100"
  >
  <send>You recover.</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^(?:A[n]? |The )?(?P&lt;basher&gt;.+?)(?: \((?P&lt;basher_label&gt;\w+)\))? sends (?:A[n]? |The )?(?P&lt;someone&gt;.+?)(?: \((?P&lt;someone_label&gt;\w+)\))? sprawling with a powerful bash\.$"
   name="bash_someone"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>
if "%&lt;someone&gt;" == "you" then
	Note("Bashed by ", "%&lt;basher_label&gt;" ~= "" and "%&lt;basher_label&gt;" or "%&lt;basher&gt;")
else
	Note("%&lt;someone_label&gt;" ~= "" and "%&lt;someone_label&gt;" or "%&lt;someone&gt;", " Bashed by ", "%&lt;basher_label&gt;" ~= "" and "%&lt;basher_label&gt;" or "%&lt;basher&gt;")
end
  </send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^(?:A[n]? |The )?(?P&lt;someone&gt;.+?)(?: \((?P&lt;someone_label&gt;\w+)\))? avoids being bashed by (?:a[n]? |the )?(?P&lt;basher&gt;.+?)(?: \((?P&lt;basher_label&gt;\w+)\))? who loses (?:his|her|its) balance\.$"
   name="bash_fail_someone"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>Note("%&lt;someone_label&gt;" ~= "" and "%&lt;someone_label&gt;" or "%&lt;someone&gt;", " failed Bash from ", "%&lt;basher_label&gt;" ~= "" and "%&lt;basher_label&gt;" or "%&lt;basher&gt;")</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^(?:A[n]? |The )?(?P&lt;someone&gt;.+?)(?: \((?P&lt;someone_label&gt;\w+)\))? seems to have recovered (?:his|her|its) senses\.$"
   name="bash_recover_someone"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>Note("%&lt;someone_label&gt;" ~= "" and "%&lt;someone_label&gt;" or "%&lt;someone&gt;", " recovers.")</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="A handful of small, silvery bottles and vials."
   omit_from_output="y"
   send_to="2"
   sequence="100"
  >
  <send>%0 - (Scarred Man)</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="A mortar and pestle of smooth, white marble."
   omit_from_output="y"
   send_to="2"
   sequence="100"
  >
  <send>%0 - (Grobb the Zaugurz ranger)</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="A sharp-edged shining sickle."
   omit_from_output="y"
   send_to="2"
   sequence="100"
  >
  <send>%0 - (Ginnar The Weapon Smith, BM)</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="An exquisite retort of polished copper."
   omit_from_output="y"
   send_to="2"
   sequence="100"
  >
  <send>%0 - (Niuldor)</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="A delicate set of translucent glass measuring cups."
   omit_from_output="y"
   send_to="2"
   sequence="100"
  >
  <send>%0 - (GH Herbalist)</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="A fine slender paring knife and a stout chopping knife."
   omit_from_output="y"
   send_to="2"
   sequence="100"
  >
  <send>%0 - (Thrakghash)</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="A round metal sieve with a mesh of golden threads."
   omit_from_output="y"
   send_to="2"
   sequence="100"
  >
  <send>%0 - (Sabb)</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="A low moan arises from the forest and the trees all around seem to part slightly."
   omit_from_output="y"
   send_to="2"
   sequence="100"
  >
  <send>%0 - (Eblees open)</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="With a sigh, the forest shifts slightly."
   omit_from_output="y"
   send_to="2"
   sequence="100"
  >
  <send>%0 - (Eblees closed)</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^As you attempt to parry (?:.+?) blow with your (?P&lt;weapon&gt;\w+)\, (?:it suffers great damage\, and )?you lose your grip on it\!$"
   name="auto_wield_weapon_trees"
   regexp="y"
   send_to="0"
   sequence="100"
  >
  <send>wield %&lt;weapon&gt;</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="The strong current drags you along through a narrow tunnel. You lose all sense of direction and suddenly you break through the surface of the water."
   name="auto_move_after_looting_elven_bag"
   send_to="0"
   sequence="100"
  >
  <send>east</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="Lauriel opens the walldoors."
   name="auto_enter_before_lorien_herbalist"
   send_to="0"
   sequence="100"
  >
  <send>lead
north
open woodenbeam up
climb up</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="An ashen aberration is dead! R.I.P."
   name="auto_loot_gems_ashen"
   send_to="0"
   sequence="100"
  >
  <send>get all.gem all.pile</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="Aldereon says &apos;Tell me, do you agree to this?&apos;"
   name="auto_quest_aldereon"
   send_to="0"
   sequence="100"
  >
  <send>nod Aldereon</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="Nordri the shopkeeper says &apos;But there is a price.&apos;"
   name="auto_quest_nordri1"
   send_to="0"
   sequence="100"
  >
  <send>say price</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="Nordri the shopkeeper says &apos;Are we agreed, then?&apos;"
   name="auto_quest_nordri2"
   send_to="0"
   sequence="100"
  >
  <send>nod Nordri</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="The radiance goes out like a snuffed candle flame, and Dagnir is gone."
   name="auto_quest_dagnir"
   send_to="0"
   sequence="100"
  >
  <send>get medallion
get key</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="A nasty old hag ponders you, a disquieting sparkle in her eyes."
   name="auto_quest_hag1"
   send_to="12"
   sequence="100"
  >
  <send>hag_quest_me = true</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^A nasty old hag says &apos;So\, are you willing to help me\?&apos;(?: in Beorning\.)?$"
   name="auto_quest_hag2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
if hag_quest_me then
	Send("nod hag")
	hag_quest_me = false
end
  </send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="Freuf the baker notices your antlers and turns to you with an annoyed look."
   name="auto_quest_freuf1"
   send_to="12"
   sequence="100"
  >
  <send>freuf_quest_me = true</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^Freuf the baker says &apos;You want to burn the antlers\, don&apos;t you\?&apos;(?: in Beorning\.)?$"
   name="auto_quest_freuf2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
if freuf_quest_me then
	Send("nod Freuf")
end
  </send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^Freuf the baker says &apos;Tell me\, would you do this service for me\?&apos;(?: in Beorning\.)?$"
   name="auto_quest_freuf3"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
if freuf_quest_me then
	Send("nod Freuf")
	freuf_quest_me = false
end
  </send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="Anarwen&apos;s grey eyes stop on you, as she ponders something."
   name="auto_quest_anarwen1"
   send_to="12"
   sequence="100"
  >
  <send>anarwen_quest_me = true</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^Anarwen says &apos;Would you help me\, \w+\?&apos;$"
   name="auto_quest_anarwen2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
if anarwen_quest_me then
	Send("nod anarwen")
	anarwen_quest_me = false
end
  </send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="An elven scout smiles at you."
   name="auto_quest_elf_camp1"
   send_to="12"
   sequence="100"
  >
  <send>elf_camp_quest_me = true</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="An elven scout says &apos;chance be headed north, to fair Imladris?&apos;"
   name="auto_quest_elf_camp2"
   send_to="12"
   sequence="100"
  >
  <send>
if elf_camp_quest_me then
	Send("nod")
end
  </send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="An elven scout says &apos;perhaps bring this letter to our master?&apos;"
   name="auto_quest_elf_camp3"
   send_to="12"
   sequence="100"
  >
  <send>
if elf_camp_quest_me then
	Send("nod")
	elf_camp_quest_me = false
end
  </send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="An elven scout gives you an important-looking letter."
   name="auto_quest_elf_camp4"
   send_to="0"
   sequence="100"
  >
  <send>put letter e.pack</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="An elven shepherdess says &apos;Feel free to speak first, then remind me - I would like to tell you of Nirnaeth Arnoediad.&apos;"
   name="auto_quest_mystical1"
   send_to="0"
   sequence="100"
  >
  <send>change language Sindarin
say Nirnaeth Arnoediad
change language Westron</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="An elven shepherdess gives you an oaken rod."
   name="auto_quest_mystical2"
   send_to="0"
   sequence="100"
  >
  <send>tell group Auto-tell: Elven shepherdess loaded rod.</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="An ancient weaver says &apos;But perhaps you would be willing to help me?&apos;"
   name="auto_quest_weaver"
   send_to="0"
   sequence="100"
  >
  <send>say yes</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="A stout dwarf is here mixing dyes."
   name="auto_quest_dye_maker1"
   send_to="0"
   sequence="100"
  >
  <send>say dye</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="A dwarven dye-maker says &apos;Let me guess, that old biddy who makes those green cloaks sent you looking for her order? Answer to me, didn&apos;t she?&apos;"
   name="auto_quest_dye_maker2"
   send_to="0"
   sequence="100"
  >
  <send>say yes</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="The rope lands close but does not quite seem to catch the stump."
   name="auto_quest_dye_maker3"
   send_to="0"
   sequence="100"
  >
  <send>throw rope stump</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="Ithildir the Noldo glances at you with a hint of suspicion in his dark eyes."
   name="auto_quest_ithildir1"
   send_to="12"
   sequence="100"
  >
  <send>ithildir_quest_me = true</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="Ithildir the Noldo says &apos;Are you seeking safety, adventure, or fighting our common foe?&apos;"
   name="auto_quest_ithildir2"
   send_to="12"
   sequence="100"
  >
  <send>
if ithildir_quest_me then
	Send("change language westron")
	Send("say adventure")
end
  </send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^Ithildir the Noldo says &apos;Please\, \w+\, will you help me\?&apos;$"
   name="auto_quest_ithildir3"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
if ithildir_quest_me then
	Send("nod Ithildir")
end
  </send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="Ithildir the Noldo gives you a beryl ring."
   name="auto_quest_ithildir4"
   send_to="12"
   sequence="100"
  >
  <send>
if ithildir_quest_me then
	Send("put beryl e.pack")
	ithildir_quest_me = false
end
  </send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="Yerik the Sage says &apos;Come again!&apos;"
   name="auto_give_note_yerik"
   send_to="0"
   sequence="100"
  >
  <send>get note e.all
give note Yerik</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="An old man gives you a white folded note."
   name="auto_put_note_pack"
   send_to="0"
   sequence="100"
  >
  <send>put note e.pack</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="The aloof hobbit says &apos;Maybe you are experienced enough to be the leader on such a perilous journey! Now, what do you say? Great fame and treasures could lie before us!&apos;"
   name="auto_quest_harle"
   send_to="0"
   sequence="100"
  >
  <send>say yes</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="Elrond turns his gaze toward you, peering into the very depths of your soul."
   name="auto_quest_elrond1"
   send_to="12"
   sequence="100"
  >
  <send>oie_key_quest_me = true</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="Elrond says &apos;Would you be willing to help me with a dangerous task?&apos;"
   name="auto_quest_elrond2"
   send_to="12"
   sequence="100"
  >
  <send>
if oie_key_quest_me then
	Send("nod elrond")
	oie_key_quest_me = false
end
  </send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="Elrond gives you an ancient silver key."
   name="auto_keyring_oie_key"
   send_to="0"
   sequence="100"
  >
  <send>put key keyring</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^Daegil says &apos;The ferry has arrived in (?:Ha|Fo)rlond\. We hope you enjoyed the ride and we wish you a pleasant day\. Please leave the ferry now\.&apos;$"
   name="auto_leave_ferry_gh"
   regexp="y"
   send_to="0"
   sequence="100"
  >
  <send>leave</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="With a grinding noise, the passage to the west closes."
   send_to="0"
   sequence="100"
  >
  <send>change alert paranoid
search</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="With a grinding noise, the passage to the west opens."
   send_to="0"
   sequence="100"
  >
  <send>change alert normal</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="You wrap one end of the web around a large rock and tie a secure knot."
   name="Auto_throw_web_gloom1"
   send_to="0"
   sequence="100"
  >
  <send>throw web</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="The web fails to cling to the other side of the chasm."
   name="Auto_throw_web_gloom2"
   send_to="0"
   sequence="100"
  >
  <send>throw web</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^(?P&lt;player&gt;\w+) slips on the treacherous ground and falls (?P&lt;direction&gt;\w+)\.$"
   name="auto_tell_player_fell_gloom"
   regexp="y"
   send_to="0"
   sequence="100"
  >
  <send>tell %&lt;player&gt; You fell %&lt;direction&gt;.</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^The Balrog entangles \w+ in its whip and hurls h(?:im|er) out of the room\!$"
   name="auto_yell_fear_balrog"
   regexp="y"
   send_to="0"
   sequence="100"
  >
  <send>yell HERE!</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="You lose your balance from all the shaking!"
   send_to="0"
   sequence="100"
  >
  <send>stand</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="Suddenly, the ground drops beneath your feet!"
   send_to="0"
   sequence="100"
  >
  <send>stand
open debris up</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="The earth crumbles away beneath your feet - you slip - you fall!"
   send_to="0"
   sequence="100"
  >
  <send>open rottenvines up</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="Rocks and pebbles slide down from the walls, blocking the tunnel to the west."
   send_to="0"
   sequence="100"
  >
  <send>open exit west</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="When you come to, you find yourself lying on a muddy floor, stripped of your gear. An overpowering smell of smoke fills your nostrils."
   send_to="0"
   sequence="100"
  >
  <send>stand</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="A gnarled tree stomps the forest floor, producing thunderous vibrations that send you sprawling."
   send_to="0"
   sequence="100"
  >
  <send>stand</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="You break the surface and find yourself looking upwards at the twinkling stars above a twilit land."
   send_to="0"
   sequence="100"
  >
  <send>stand</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^You slip on the treacherous ground and fall (?:north|east|south|west|up|down)\, landing on your back\.$"
   regexp="y"
   send_to="0"
   sequence="100"
  >
  <send>stand</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="The entire cave system thunders and reverberates as the huge beast drops dead to the ground, making you lose your balance."
   send_to="0"
   sequence="100"
  >
  <send>stand</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="runes in deep ebony ink. A large glowing rune &quot;I&quot; is written on the top"
   omit_from_output="y"
   send_to="2"
   sequence="100"
  >
  <send>%0 - (level 20 magic blast, detect evil, and poison)</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="runes in deep ebony ink. A large glowing rune &quot;M&quot; is written on the top"
   omit_from_output="y"
   send_to="2"
   sequence="100"
  >
  <send>%0 - (level 20 blindness, shroud, and poison)</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="runes in deep ebony ink. A large glowing rune &quot;N&quot; is written on the top"
   omit_from_output="y"
   send_to="2"
   sequence="100"
  >
  <send>%0 - (level 20 call lightning, curse, and earthquake)</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="runes in deep ebony ink. A large glowing rune &quot;Q&quot; is written on the top"
   omit_from_output="y"
   send_to="2"
   sequence="100"
  >
  <send>%0 - (level 20 silence, night vision, and curse)</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="  sparkling maroon. This gem must then be placed within the inset of an"
   omit_from_output="y"
   send_to="2"
   sequence="100"
  >
  <send>%0 - (cc ring, requires garnet)</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="  green colour is cast upon its surroundings when touched by illumination."
   omit_from_output="y"
   send_to="2"
   sequence="100"
  >
  <send>%0 - (remp ring, requires emerald)</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="  blue glow emanates from deep within. This gem must then be placed within the"
   omit_from_output="y"
   send_to="2"
   sequence="100"
  >
  <send>%0 - (scout ring, requires opal)</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="  hardness and rare blue transparency give off a vitreous luster. This gem"
   omit_from_output="y"
   send_to="2"
   sequence="100"
  >
  <send>%0 - (strength ring, requires topaz)</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="  red glow seems to capture and absorb all illumination surrounding it. This"
   omit_from_output="y"
   send_to="2"
   sequence="100"
  >
  <send>%0 - (mana ring, requires ruby)</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^A citizen mercenary (?:\(\w+\) )?(?:snuffs|lights) a lantern\.$"
   name="omit_merc_lanterns"
   omit_from_output="y"
   regexp="y"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^[ ]{4}[:][ ]{26}[*]{2}[ ]{5}(?P&lt;direction&gt; [NEW]|S[EW])[ ]{4}[*]{2}[ ]{29}[:][ ]{3}$"
   name="auto_move_stakes"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
if auto_move_stakes then
	move_stakes(Trim("%&lt;direction&gt;"))
	auto_move_stakes = false
end
  </send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^Several glyphs have been carved into the oaken rod\. Some symbols are larger and more finely detailed than the others\: a (?P&lt;first&gt;[^\,]+)\, a (?P&lt;second&gt;[^\,]+)\, and a (?P&lt;third&gt;[^\.]+)\.$"
   name="auto_open_mystical"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
if GLYPHS["%&lt;first&gt;"] and GLYPHS["%&lt;second&gt;"] and GLYPHS["%&lt;third&gt;"] then
	Send("put rod ", GLYPHS["%&lt;first&gt;"])
	Send("put rod ", GLYPHS["%&lt;second&gt;"])
	Send("put rod ", GLYPHS["%&lt;third&gt;"])
end
  </send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^A (?:great\, dark|horrible\, dark-green) spider quickly begins to weave a tight\, sticky web around your body\!$"
   name="bm_spiders1"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>CallPlugin(TTS, "silence")
Note("Flee if solo!")
  </send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^A (?:great\, dark|horrible\, dark-green) spider burdens your movement wrapping you layer after layer\!$"
   name="bm_spiders2"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>CallPlugin(TTS, "silence")
Note("Flee if grouped!")
  </send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^You stagger for your balance as a (?:great\, dark|horrible\, dark-green) spider wraps the sticky cords faster and faster around you\!$"
   name="bm_spiders3"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>CallPlugin(TTS, "silence")
Note("Narrate for help!")
  </send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^After some struggle you remove the last web on you\.$"
   name="bm_spiders4"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>CallPlugin(TTS, "silence")
Note("Web removed!")
  </send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="With a huge effort the ram is moved away from here."
   name="gag_ram"
   omit_from_output="y"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="You feel a slight tremor in your blade."
   name="gag_claymore"
   omit_from_output="y"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^A cockroach (?:is scuttling across the floor carrying some debris|panics\, and attempts to flee)\.$"
   name="gag_cockroach"
   omit_from_output="y"
   regexp="y"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^A (?:large\, shimmering pearl|small crystal phial) shines a warm light on \w+\.$"
   name="gag_bless_objects"
   omit_from_output="y"
   regexp="y"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^(?:There is a(?:n old| lit) street\-lamp on the border of the street(?:\, illuminating the area)?|A finely crafted crystal lamp is (?:here|hanging from a tree branch))\.$"
   name="gag_street_lamps"
   omit_from_output="y"
   regexp="y"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="You grope around for exits:"
   name="gag_no_light_exits"
   omit_from_output="y"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="Snow is falling from the sky, and thunder can be heard over the roofs."
   name="gag_snow1"
   omit_from_output="y"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="You don&apos;t see any more snow here."
   name="gag_snow2"
   omit_from_output="y"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^There is (?:a lot of|some) (?:water|snow) on the ground\.$"
   name="gag_snow_water_ground"
   omit_from_output="y"
   regexp="y"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^The (?:ground|water) is frozen solid\.$"
   name="gag_frozen_ground_and_water"
   omit_from_output="y"
   regexp="y"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^(?:You quietly scout \w+\.\.|You stop scouting)\.$"
   name="gag_scouting_start_stop"
   omit_from_output="y"
   regexp="y"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^(?:You grasp the corpse and start dragging it\.|You are already dragging it\!)$"
   name="auto_drag_next"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>
if auto_drag then
	auto_drag_counter = auto_drag_counter + 1
	Send(string.format("drag %s.corpse", auto_drag_counter))
else
	Note("%0")
end
  </send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^You do not see anything like that\.$"
   name="auto_drag_complete"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>
if auto_drag then
	Note("Now dragging all corpses.")
	auto_drag_counter = 1
	auto_drag = false
else
	Note("%0")
end
  </send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^(?P&lt;player&gt;.+?) joins (?P&lt;tank&gt;.+?)&apos;s fight\.$"
   name="shorten_assists"
   omit_from_output="y"
   regexp="y"
   send_to="2"
   sequence="100"
  >
  <send>%&lt;player&gt; assists %&lt;tank&gt;!</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^(?:A[n]? |The )?(?P&lt;someone&gt;.+?)(?: \((?P&lt;someone_label&gt;\w+)\))? leaves (?P&lt;direction&gt;north|east|south|west|up|down)(?: (?P&lt;action&gt;sneaking|riding a (?P&lt;mount&gt;pony|dales-pony|horse|warhorse|pack horse|trained horse|horse of the Rohirrim|brown donkey|mountain mule|hungry warg|brown wolf|slavering warg|black steed)(?: \((?P&lt;mount_label&gt;\w+)\))?))?\.$"
   name="shorten_leaves_message"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="80"
  >
  <send>
local someone = "%&lt;someone&gt;"
local direction = "%&lt;direction&gt;"
local mount = "%&lt;mount&gt;"
if "%&lt;someone_label&gt;" ~= "" then
	someone = "%&lt;someone_label&gt;"
end
if "%&lt;mount_label&gt;" ~= "" then
	mount = "%&lt;mount_label&gt;"
elseif mount == "horse" then
	mount = "docile"
elseif mount:startswith("brown") or mount:startswith("mountain") or mount:endswith("Rohirrim") or mount:endswith("steed") then
	-- Use the last word of the string.
	mount = mount:match("%w+$")
else
	-- Use the first word in the string.
	-- If string is empty, mount will be set to nil.
	mount = mount:match("^%w+")
end
if "%&lt;someone&gt;" ~= "cockroach" then
	Note(Trim(string.format("%s %s %s", direction, someone, mount and mount or "%&lt;action&gt;")))
end
  </send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^(?:Is (?:playing|disconnected)|Last login [^*]+ (?:year|month|day|hour)[s]? ago) from \*\.(?P&lt;code&gt;[^\W\d_]{2,2})\.$"
   name="translate_country_codes"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>
if country_codes[string.lower("%&lt;code&gt;")] then
	Note(string.format("%0 (%s)", country_codes[string.lower("%&lt;code&gt;")]))
else
	Note("%0")
end
  </send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="You have been idle, and are pulled into a void."
   name="no_void"
   sequence="100"
  >
  <send>wake
stand
lead
train all</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^ACK\! (?:A[n]? |The )?(.+?) didn&apos;t follow you\, you lost (?:him|her|it)\.$"
   name="beep_on_ack"
   regexp="y"
   omit_from_output="y"
   send_to="2"
   sequence="100"
  >
  <send>\aLost %1!</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^(Nah\.\.\. You feel too relaxed to do that\.|Maybe you should get on your feet first\?|You can&apos;t do this sitting\!|You can&apos;t concentrate enough while resting\.|Not from your present position\!)$"
   name="auto_stand"
   regexp="y"
   sequence="100"
  >
  <send>stand</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^(?:Disabled all prompt fields|All prompt fields enabled|Your prompt will display twiddlers when you are busy)\.$"
   name="keep_twiddlers_off"
   sequence="100"
   regexp="y"
   keep_evaluating="y"
  >
  <send>change prompt twiddlers off</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^(?:Disabled all prompt fields|All prompt fields enabled|Your prompt will no longer show when you have pre-typed commands)\.$"
   name="keep_pretype_on"
   sequence="100"
   regexp="y"
   keep_evaluating="y"
  >
  <send>change prompt pretype on</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="* is in an excellent condition."
   omit_from_output="y"
   regexp="n"
   send_to="2"
   sequence="100"
  >
  <send>%0 (healthy 100%)</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="* has some small bruises."
   omit_from_output="y"
   regexp="n"
   send_to="2"
   sequence="100"
  >
  <send>%0 (fine 99%)</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="* has several bruises."
   omit_from_output="y"
   regexp="n"
   send_to="2"
   sequence="100"
  >
  <send>%0 (hurt 70%)</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="* has some big nasty scratches."
   omit_from_output="y"
   regexp="n"
   send_to="2"
   sequence="100"
  >
  <send>%0 (wounded 45%)</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="* looks pretty hurt."
   omit_from_output="y"
   regexp="n"
   send_to="2"
   sequence="100"
  >
  <send>%0 (bad 25%)</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="* is in very bad shape."
   omit_from_output="y"
   regexp="n"
   send_to="2"
   sequence="100"
  >
  <send>%0 (awful 10%)</send>
  </trigger>
</triggers>

<!--  Aliases  -->

<aliases>
  <alias
   name="get_new_unique_id"
   match="newid"
   enabled="y"
   group="mume_misc"
   send_to="12"
   sequence="100"
  >
  <send>
local new_id = GetUniqueID()
SetClipboard(new_id)
Note(string.format("%s copied to clipboard.", new_id))
  </send>
  </alias>
  <alias
   name="loot_chest"
   match="chest"
   enabled="y"
   group="mume_misc"
   send_to="0"
   sequence="100"
  >
  <send>unlock chest
open chest
get all chest</send>
  </alias>
  <alias
   name="recite_azure_scroll"
   match="^azu\s*?(?:\s+(?P&lt;player&gt;\w+))?$"
   enabled="y"
   group="mume_misc"
   regexp="y"
   send_to="0"
   sequence="100"
  >
  <send>get azurescroll all
recite azurescroll %&lt;player&gt;</send>
  </alias>
  <alias
   name="recite_black_scroll"
   match="^bla\s*?(?:\s+(?P&lt;player&gt;\w+))?$"
   enabled="y"
   group="mume_misc"
   regexp="y"
   send_to="0"
   sequence="100"
  >
  <send>get blackscroll all
recite blackscroll %&lt;player&gt;</send>
  </alias>
  <alias
   name="recite_blue_scroll"
   match="^blu\s*?(?:\s+(?P&lt;player&gt;\w+))?$"
   enabled="y"
   group="mume_misc"
   regexp="y"
   send_to="0"
   sequence="100"
  >
  <send>get bluescroll all
recite bluescroll %&lt;player&gt;</send>
  </alias>
  <alias
   name="recite_ebony_scroll"
   match="^ebo\s*?(?:\s+(?P&lt;player&gt;\w+))?$"
   enabled="y"
   group="mume_misc"
   regexp="y"
   send_to="0"
   sequence="100"
  >
  <send>get ebonyscroll all
recite ebonyscroll %&lt;player&gt;</send>
  </alias>
  <alias
   name="recite_purple_scroll"
   match="^purp\s*?(?:\s+(?P&lt;player&gt;\w+))?$"
   enabled="y"
   group="mume_misc"
   regexp="y"
   send_to="0"
   sequence="100"
  >
  <send>get purplescroll all
recite purplescroll %&lt;player&gt;</send>
  </alias>
  <alias
   name="recite_vellum_scroll"
   match="^vel\s*?(?:\s+(?P&lt;player&gt;\w+))?$"
   enabled="y"
   group="mume_misc"
   regexp="y"
   send_to="0"
   sequence="100"
  >
  <send>get vellumscroll all
recite vellumscroll %&lt;player&gt;</send>
  </alias>
  <alias
   name="antidote_lore"
   match="^antidote\s*?(?:\s+(?P&lt;container&gt;[\w\.]+))?$"
   enabled="y"
   group="mume_misc"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
if "%&lt;container&gt;" == "" then
	Note("Antidote Lore: 2X blackberries, 1X long, slender green leaves (athelas), 1X white petals (lily), 1X grey petals (figwort)")
else
	Send("get blackberries all")
	Send("put blackberries %&lt;container&gt;")
	Send("get blackberries all")
	Send("put blackberries %&lt;container&gt;")
	Send("get athelas all")
	Send("put athelas %&lt;container&gt;")
	Send("get lily all")
	Send("put lily %&lt;container&gt;")
	Send("get figwort all")
	Send("put figwort %&lt;container&gt;")
end
  </send>
  </alias>
  <alias
   name="arachnia_lore"
   match="^arachnia\s*?(?:\s+(?P&lt;container&gt;[\w\.]+))?$"
   enabled="y"
   group="mume_misc"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
if "%&lt;container&gt;" == "" then
	Note("Arachnia Lore: 1X short, black fur (butcher from bats), 1X short, moist tail (butcher from salamander), 1X grey fluid-sack (butcher from grey spider)")
else
	Send("get bat-fur all")
	Send("put bat-fur %&lt;container&gt;")
	Send("get salamander all")
	Send("put salamander %&lt;container&gt;")
	Send("get greyfluid-sack all")
	Send("put greyfluid-sack %&lt;container&gt;")
end
  </send>
  </alias>
  <alias
   name="baker_lore"
   match="^baker\s*?(?:\s+(?P&lt;container&gt;[\w\.]+))?$"
   enabled="y"
   group="mume_misc"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
if "%&lt;container&gt;" == "" then
	Note("Baker Lore: 3X eggs, 1X flour, 1X mashed honey-wax mixture (crushed honeycomb)")
else
	Send("get egg all")
	Send("put egg %&lt;container&gt;")
	Send("get egg all")
	Send("put egg %&lt;container&gt;")
	Send("get egg all")
	Send("put egg %&lt;container&gt;")
	Send("get flour all")
	Send("put flour %&lt;container&gt;")
	Send("get honey-wax all")
	Send("put honey-wax %&lt;container&gt;")
end
  </send>
  </alias>
  <alias
   name="clearthoughts_lore"
   match="^clearthoughts\s*?(?:\s+(?P&lt;container&gt;[\w\.]+))?$"
   enabled="y"
   group="mume_misc"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
if "%&lt;container&gt;" == "" then
	Note("ClearThoughts Lore: 1X mauve petals, 1X grey-green leaves (sage), 1X scented crushed leaves (thyme), 1X hard, round, black berries (juniper)")
else
	Send("get mauve all")
	Send("put mauve %&lt;container&gt;")
	Send("get sage all")
	Send("put sage %&lt;container&gt;")
	Send("get thyme all")
	Send("put thyme %&lt;container&gt;")
	Send("get juniper all")
	Send("put juniper %&lt;container&gt;")
end
  </send>
  </alias>
  <alias
   name="orkish_draught_lore"
   match="^draught\s*?(?:\s+(?P&lt;container&gt;[\w\.]+))?$"
   enabled="y"
   group="mume_misc"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
if "%&lt;container&gt;" == "" then
	Note("Orkish Draught Lore: 1X narrow leaves (tarragon), 1X short, moist tail (butcher salamander), 1X short, black fur (butcher bat), 1X vial of preserved blood")
else
	Send("get tarragon all")
	Send("put tarragon %&lt;container&gt;")
	Send("get salamander all")
	Send("put salamander %&lt;container&gt;")
	Send("get bat-fur all")
	Send("put bat-fur %&lt;container&gt;")
	Send("get blood-vial all")
	Send("put blood-vial %&lt;container&gt;")
end
  </send>
  </alias>
  <alias
   name="healing_lore"
   match="^healing\s*?(?:\s+(?P&lt;container&gt;[\w\.]+))?$"
   enabled="y"
   group="mume_misc"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
if "%&lt;container&gt;" == "" then
	Note("Healing Lore: 1X blackcurrant berries, 2X grey-green leaves (sage), 1X long, slender green leaves (athelas), 1X yellow petals (foxtail)")
else
	Send("get blackcurrant all")
	Send("put blackcurrant %&lt;container&gt;")
	Send("get sage all")
	Send("put sage %&lt;container&gt;")
	Send("get sage all")
	Send("put sage %&lt;container&gt;")
	Send("get athelas all")
	Send("put athelas %&lt;container&gt;")
	Send("get foxtail all")
	Send("put foxtail %&lt;container&gt;")
end
  </send>
  </alias>
  <alias
   name="leaf_cake_lore"
   match="^leafcake\s*?(?:\s+(?P&lt;container&gt;[\w\.]+))?$"
   enabled="y"
   group="mume_misc"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
if "%&lt;container&gt;" == "" then
	Note("Leaf-cake Lore: 1X purple flower with a fluffy red center (coneflower), 1X mashed honey-wax mixture (crushed honeycomb), 1X grey-green leaves (sage), 1X scented crushed leaves (thyme)")
else
	Send("get coneflower all")
	Send("put coneflower %&lt;container&gt;")
	Send("get honey-wax all")
	Send("put honey-wax %&lt;container&gt;")
	Send("get sage all")
	Send("put sage %&lt;container&gt;")
	Send("get thyme all")
	Send("put thyme %&lt;container&gt;")
end
  </send>
  </alias>
  <alias
   name="scaly_lore"
   match="^scaly\s*?(?:\s+(?P&lt;container&gt;[\w\.]+))?$"
   enabled="y"
   group="mume_misc"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
if "%&lt;container&gt;" == "" then
	Note("Drake-slumber (Scaly) Lore: 1X red mushroom, 1X hemlock, 1X sticky mass of stems, leaves and sap (crushed milkweed), 1X foul-smelling root (valerian), 1X orange-red flowers (poppy), 1X white, egg-shaped berries (baneberries)")
else
	Send("get red-mushroom all")
	Send("put red-mushroom %&lt;container&gt;")
	Send("get hemlock all")
	Send("put hemlock %&lt;container&gt;")
	Send("get milkweed all")
	Send("put milkweed %&lt;container&gt;")
	Send("get valerian all")
	Send("put valerian %&lt;container&gt;")
	Send("get poppy all")
	Send("put poppy %&lt;container&gt;")
	Send("get baneberries all")
	Send("put baneberries %&lt;container&gt;")
end
  </send>
  </alias>
  <alias
   name="shadows_lore"
   match="^shadows\s*?(?:\s+(?P&lt;container&gt;[\w\.]+))?$"
   enabled="y"
   group="mume_misc"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
if "%&lt;container&gt;" == "" then
	Note("Shadows Lore: 1X cinnamon, 1X needlelike leaves (rosemary), 1X rib-bone")
else
	Send("get cinnamon all")
	Send("put cinnamon %&lt;container&gt;")
	Send("get rosemary all")
	Send("put rosemary %&lt;container&gt;")
	Send("get rib-bone all")
	Send("put rib-bone %&lt;container&gt;")
end
  </send>
  </alias>
  <alias
   name="travelling_lore"
   match="^trave[l]{1,2}ing\s*?(?:\s+(?P&lt;container&gt;[\w\.]+))?$"
   enabled="y"
   group="mume_misc"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
if "%&lt;container&gt;" == "" then
	Note("Travelling Lore: 1X narrow leaves (tarragon), 1X clover, 1X man-like root (ginseng)")
else
	Send("get tarragon all")
	Send("put tarragon %&lt;container&gt;")
	Send("get clover all")
	Send("put clover %&lt;container&gt;")
	Send("get ginseng all")
	Send("put ginseng %&lt;container&gt;")
end
  </send>
  </alias>
  <alias
   name="venom_lore"
   match="^venom\s*?(?:\s+(?P&lt;container&gt;[\w\.]+))?$"
   enabled="y"
   group="mume_misc"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
if "%&lt;container&gt;" == "" then
	Note("Venom Lore: 1X short, black fur (butcher from bats), 1X short, moist tail (butcher from salamander), 1X small fluid-sack (butcher from rattlesnake)")
else
	Send("get bat-fur all")
	Send("put bat-fur %&lt;container&gt;")
	Send("get salamander all")
	Send("put salamander %&lt;container&gt;")
	Send("get smallfluid-sack all")
	Send("put smallfluid-sack %&lt;container&gt;")
end
  </send>
  </alias>
  <alias
   name="walking_lore"
   match="^walking\s*?(?:\s+(?P&lt;container&gt;[\w\.]+))?$"
   enabled="y"
   group="mume_misc"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
if "%&lt;container&gt;" == "" then
	Note("Walking Lore: 1X pale-green, crushed leaves (marjoram), 1X clover, 1X cloves, 1X hard, round, black berries (juniper)")
else
	Send("get marjoram all")
	Send("put marjoram %&lt;container&gt;")
	Send("get clover all")
	Send("put clover %&lt;container&gt;")
	Send("get cloves all")
	Send("put cloves %&lt;container&gt;")
	Send("get juniper all")
	Send("put juniper %&lt;container&gt;")
end
  </send>
  </alias>
  <alias
   name="toggle_auto_use_bless_staff"
   match="autobstaff"
   enabled="y"
   group="mume_misc"
   send_to="12"
   sequence="100"
  >
  <send>
auto_use_bless_staff = not auto_use_bless_staff
CallPlugin(CONFIG, "set", "auto_use_bless_staff", auto_use_bless_staff)
Note("Auto Use Bless Staff ", auto_use_bless_staff and "enabled." or "disabled.")
  </send>
  </alias>
  <alias
   name="toggle_auto_kick"
   match="autokick"
   enabled="y"
   group="mume_misc"
   send_to="12"
   sequence="100"
  >
  <send>
auto_kick = not auto_kick
CallPlugin(CONFIG, "set", "auto_kick", auto_kick)
Note("Auto Kick ", auto_kick and "enabled." or "disabled.")
  </send>
  </alias>
  <alias
   name="spam_recover"
   match="rr"
   enabled="y"
   group="mume_misc"
   sequence="100"
  >
  <send>get all.arrow room.all
get all.arrow
put all.arrow quiver</send>
  </alias>
  <alias
   name="reveal_all"
   match="ra"
   enabled="y"
   group="mume_misc"
   sequence="100"
  >
  <send>reveal all</send>
  </alias>
  <alias
   name="reveal_quick"
   match="rq"
   enabled="y"
   group="mume_misc"
   sequence="100"
  >
  <send>reveal quick</send>
  </alias>
  <alias
   name="reveal_thorough"
   match="rt"
   enabled="y"
   group="mume_misc"
   sequence="100"
  >
  <send>reveal thorough</send>
  </alias>
  <alias
   name="search_thorough"
   match="st"
   enabled="y"
   group="mume_misc"
   sequence="100"
  >
  <send>search thorough</send>
  </alias>
  <alias
   name="search_quick"
   match="sq"
   enabled="y"
   group="mume_misc"
   sequence="100"
  >
  <send>search quick</send>
  </alias>
  <alias
   name="show_level"
   match="lev"
   enabled="y"
   group="mume_misc"
   send_to="12"
   sequence="100"
  >
  <send>Send("info %l")</send>
  </alias>
  <alias
   name="drag_all"
   match="dragall"
   enabled="y"
   group="mume_misc"
   send_to="12"
   sequence="100"
  >
  <send>
auto_drag = true
auto_drag_counter = 1
Send("drag 1.corpse")
  </send>
  </alias>
  <alias
   name="move_stakes"
   match="movestakes"
   enabled="y"
   group="mume_misc"
   ignore_case="y"
   send_to="12"
   sequence="100"
  >
  <send>
auto_move_stakes = true
Send("look star")
  </send>
  </alias>
  <alias
   name="butcher_corpses"
   match="^bc(?:\s*(?P&lt;digit&gt;\d+))?$"
   enabled="y"
   group="mume_misc"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Send(string.format("butcher %s.corpse", "%&lt;digit&gt;" ~= "" and "%&lt;digit&gt;" or "1"))</send>
  </alias>
  <alias
   name="money_info"
   match="money"
   enabled="y"
   group="mume_misc"
   sequence="100"
  >
  <send>info %%r</send>
  </alias>
  <alias
   name="affected_by_info"
   match="affect"
   enabled="y"
   group="mume_misc"
   sequence="100"
  >
  <send>info %%f</send>
  </alias>
  <alias
   name="age_info"
   match="age"
   enabled="y"
   group="mume_misc"
   sequence="100"
  >
  <send>info %%a years, %%N months, and %%n days old. Played for %%P hours realtime.</send>
  </alias>
  <alias
   name="alignment_info"
   match="align"
   enabled="y"
   group="mume_misc"
   sequence="100"
  >
  <send>info %%q</send>
  </alias>
  <alias
   name="citizen_list_info"
   match="citizen"
   enabled="y"
   group="mume_misc"
   sequence="100"
  >
  <send>info %%c</send>
  </alias>
  <alias
   name="weight_carried_info"
   match="weight"
   enabled="y"
   group="mume_misc"
   sequence="100"
  >
  <send>info %%C, %%F</send>
  </alias>
  <alias
   name="look_in"
   match="li *"
   enabled="y"
   group="mume_misc"
   sequence="100"
  >
  <send>look in %1</send>
  </alias>
  <alias
   name="switch_cloak_from_pouch"
   match="cpouch"
   enabled="y"
   group="mume_misc"
   sequence="100"
  >
  <send>remove cloak
remove mantle
remove fur
get cloak pouch
wear cloak
put cloak pouch
put mantle pouch
put fur pouch</send>
  </alias>
  <alias
   name="switch_mantle_from_pouch"
   match="mpouch"
   enabled="y"
   group="mume_misc"
   sequence="100"
  >
  <send>remove cloak
remove mantle
remove fur
get mantle pouch
wear mantle
put cloak pouch
put mantle pouch
put fur pouch</send>
  </alias>
  <alias
   name="switch_fur_from_pack"
   match="fpack"
   enabled="y"
   group="mume_misc"
   sequence="100"
  >
  <send>remove cloak
remove mantle
remove fur
get fur e.pack
wear fur
put cloak e.pack
put mantle e.pack
put fur e.pack</send>
  </alias>
  <alias
   name="switch_fur_from_pouch"
   match="fpouch"
   enabled="y"
   group="mume_misc"
   sequence="100"
  >
  <send>remove cloak
remove mantle
remove fur
get fur pouch
wear fur
put cloak pouch
put mantle pouch
put fur pouch</send>
  </alias>
  <alias
   name="wake_stand"
   match="ws"
   enabled="y"
   group="mume_misc"
   sequence="100"
  >
  <send>wake
stand</send>
  </alias>
  <alias
   name="Switch_cloak_from_pack"
   match="cpack"
   enabled="y"
   group="mume_misc"
   sequence="100"
  >
  <send>remove cloak
remove mantle
remove fur
get cloak e.pack
wear cloak
put cloak e.pack
put mantle e.pack
put fur e.pack</send>
  </alias>
  <alias
   name="Switch_mantle_from_pack"
   match="mpack"
   enabled="y"
   group="mume_misc"
   sequence="100"
  >
  <send>remove cloak
remove mantle
remove fur
get mantle e.pack
wear mantle
put mantle e.pack
put cloak e.pack
put fur e.pack</send>
  </alias>
  <alias
   name="switch_boots_from_pouch"
   match="bpouch"
   enabled="y"
   group="mume_misc"
   sequence="100"
  >
  <send>remove boots
get boots pouch
wear boots
put boots pouch</send>
  </alias>
  <alias
   name="switch_boots_from_pack"
   match="bpack"
   enabled="y"
   group="mume_misc"
   sequence="100"
  >
  <send>remove boots
get boots e.pack
wear boots
put boots e.pack</send>
  </alias>
  <alias
   name="switch_belt_from_pack"
   match="belt"
   enabled="y"
   group="mume_misc"
   sequence="100"
  >
  <send>remove belt
get belt e.pack
wear belt
wear ruby
put belt e.pack
wear all</send>
  </alias>
  <alias
   name="switch_gloves_from_pack"
   match="gpack"
   enabled="y"
   group="mume_misc"
   sequence="100"
  >
  <send>remove gloves
get gloves e.pack
wear gloves
put gloves e.pack</send>
  </alias>
  <alias
   name="wear_helm"
   match="helm"
   enabled="y"
   group="mume_misc"
   sequence="100"
  >
  <send>remove circlet
remove crown
put circlet e.pack
put crown e.pack
get helmet e.pack
wear helmet</send>
  </alias>
  <alias
   name="wear_circlet"
   match="cir"
   enabled="y"
   group="mume_misc"
   sequence="100"
  >
  <send>remove helmet
put helmet e.pack
get circlet e.pack
get crown e.pack
wear circlet
wear crown</send>
  </alias>
  <alias
   name="use_str_ring"
   match="string"
   enabled="y"
   group="mume_misc"
   sequence="100"
  >
  <send>remove ring
get golden-topaz-ring e.pack
wear golden-topaz-ring
use golden-topaz-ring
remove golden-topaz-ring
put golden-topaz-ring e.pack
wear ring</send>
  </alias>
  <alias
   name="use_cc_ring"
   match="ccring"
   enabled="y"
   group="mume_misc"
   sequence="100"
  >
  <send>remove ring
get golden-garnet-ring e.pack
wear golden-garnet-ring
use golden-garnet-ring
remove golden-garnet-ring
put golden-garnet-ring e.pack
wear ring</send>
  </alias>
  <alias
   name="use_pipe"
   match="pipe"
   enabled="y"
   group="mume_misc"
   sequence="100"
  >
  <send>get pipe e.pack
wield pipe
rest
smoke pipe
stand
remove pipe
put pipe e.pack</send>
  </alias>
  <alias
   name="drink_goblet"
   match="dg"
   enabled="y"
   group="mume_misc"
   sequence="100"
  >
  <send>get goblet e.pack
drink goblet
put goblet e.pack</send>
  </alias>
  <alias
   name="pour_water_goblet"
   match="pg"
   enabled="y"
   group="mume_misc"
   sequence="100"
  >
  <send>get goblet e.pack
pour water goblet
put goblet e.pack</send>
  </alias>
  <alias
   name="use_pbs"
   match="^pbs\s*?(?:\s+(?P&lt;player&gt;\w+))?$"
   enabled="y"
   group="mume_misc"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
Send("get bluestone all")
Send("wield bluestone")
Send(string.format("use bluestone %s", "%&lt;player&gt;"))
Send("remove bluestone")
Send("put bluestone e.pack")
  </send>
  </alias>
  <alias
   name="water_bag"
   match="wbag"
   enabled="y"
   group="mume_misc"
   sequence="100"
  >
  <send>get elven-bag e.pack
get cup i.elven-bag
drink cup
put cup i.elven-bag
put elven-bag e.pack</send>
  </alias>
  <alias
   name="food_bag"
   match="fbag"
   enabled="y"
   group="mume_misc"
   sequence="100"
  >
  <send>get elven-bag e.pack
get wafer i.elven-bag
eat wafer
put elven-bag e.pack</send>
  </alias>
  <alias
   name="rope_bag"
   match="rbag"
   enabled="y"
   group="mume_misc"
   sequence="100"
  >
  <send>get elven-bag e.pack
get rope i.elven-bag
put elven-bag e.pack</send>
  </alias>
  <alias
   name="knife_bag"
   match="kbag"
   enabled="y"
   group="mume_misc"
   sequence="100"
  >
  <send>get elven-bag e.pack
get knife i.elven-bag
put elven-bag e.pack</send>
  </alias>
</aliases>

<script>
<![CDATA[
require("mystdlib")
gmcp = require("gmcp")
json = require("dkjson").use_lpeg()

CONFIG = "d19a2f0a604c96b7318aa67f"
TTS = "925cdd0331023d9f0b8f05a7"

GMCP_HANDLER_ID = gmcp.get_handler_id()
GMCP_HANDLER_NAME = gmcp.get_handler_name()
CHAR_NAME = gmcp.name_to_id("char_name")
MPM_MESSAGE = gmcp.name_to_id("mpm_message")
SUPPORTED_GMCP_PACKAGES = table.set_create({CHAR_NAME, MPM_MESSAGE})

COUNTRY_CODES_FILE = string.format("%sdatabases\\country_codes.json", GetInfo(67))

if os.isFile(COUNTRY_CODES_FILE) then
	fileObj = io.open(COUNTRY_CODES_FILE, "rb")
	country_codes = json.decode(fileObj:read("*all"), 1, nil)
	fileObj:close()
else
	country_codes = {}
end

GLYPHS = {
	["sprig of mistletoe"] = "wedding",
	["tree"] = "hunt",
	["flame"] = "battle",
	["cloud"] = "river",
	["star"] = "mountain",
	["harp"] = "feast",
	["crown"] = "funeral"
}

auto_move_stakes = false
auto_drag = false
auto_drag_counter = 1
return_code, auto_kick = CallPlugin(CONFIG, "get", "auto_kick")
auto_kick = auto_kick or false
have_bless_staff = false
return_code, auto_use_bless_staff = CallPlugin(CONFIG, "get", "auto_use_bless_staff")
auto_use_bless_staff = auto_use_bless_staff or false
hag_quest_me = false
freuf_quest_me = false
elf_camp_quest_me = false
oie_key_quest_me = false
anarwen_quest_me = false
ithildir_quest_me = false
mercenary_payment = "10"
nobles_dead = 0
is_playing_character = false  -- Set to true after player logs a character from the welcome screen or account menu.
char_name = {}
ascii_art_lines = 0

function on_character_logged_in()
	Send("change compact off")
	Send("change pager off")
	Send("change width default terminal")
	Send("change width descriptions terminal")
	Send("change width table max 80")
	Send("change width text terminal")
	Send("change prompt none")
end

function move_stakes(direction)
	local directions = {"N", "E", "SE", "SW", "W"}
	local offset = table.index(directions, direction)
	if not offset then
		Note(string.format("Error: invalid direction '%s'.", direction))
		return
	end
	local stakes = {"Forostar", "Orrostar", "Hyarrostar", "Hyarnustar", "Andustar"}
	-- Mittalmar is always in the center.
	Send("move Mittalmar centre")
	for i, stake in ipairs(stakes) do
		local oriented = (i - offset) % table.getn(directions) + 1
		Send(string.format("move %s %s", stake, directions[oriented]))
	end
end

function connect_to_mapper()
	if not IsConnected() then
		if os.isFile(GetInfo (68) .. "mapper_proxy\\mapper_ready.ignore") then
			Connect()
		else
			DoAfterSpecial(0.1, "connect_to_mapper()", sendto.script)
		end
	end
end

function OnPluginScreendraw(line_type, log, line)
	if not GetInfo(114) then  -- Output is not paused.
		-- For some reason, the output window occasionally gets frozen, even when not paused. It will then unfreeze after some more lines are received from the game.
		-- After several years observing this bug, I am still unable to reliably reproduce it. Perhaps it is caused by us always omitting the prompt line?
		-- This callback will receive new lines, even if the output window is erroneously frozen.
		-- Scroll to end (Emulate pressing the End key).
		DoCommand("End")
	end
end

function OnPluginInstall()
	if not IsConnected() then
		Note("Connecting to the mapper.")
		connect_to_mapper()
	end
end

function OnPluginConnect()
	if not GetInfo(125) then
		-- Client is not in full screen mode. Enable it.
		DoCommand("FullScreenMode")
	end
end

function OnPluginLineReceived(text)
	if ascii_art_lines > 0 then
		ascii_art_lines = ascii_art_lines - 1
		return false
	end
	return true
end

function OnPluginBroadcast (msg, id, name, text)
	if id == GMCP_HANDLER_ID and name == GMCP_HANDLER_NAME and SUPPORTED_GMCP_PACKAGES[msg] then
		local tbl = {}
		gmcp.parse(tbl, msg, text)
		if msg == MPM_MESSAGE and tbl.text then
			Note(tbl.text)
		elseif msg == CHAR_NAME then
			gmcp.parse(char_name, msg, text)
			if not is_playing_character then
				on_character_logged_in()
				is_playing_character = true
			end
		end
	end
end

]]>
</script>

</muclient>
