<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- This Source Code Form is subject to the terms of the Mozilla Public -->
<!-- License, v. 2.0. If a copy of the MPL was not distributed with this -->
<!-- file, You can obtain one at http://mozilla.org/MPL/2.0/. -->

<!-- Saved on Thursday, August 23, 2012, 7:27 PM -->
<!-- MuClient version 4.81 -->

<!-- Plugin "mume_misc" generated by Plugin Wizard -->

<muclient>
<plugin
   name="mume_misc"
   author="Nick Stockton"
   id="ad20dd80cbd7c2fea78ce15c"
   language="Lua"
   purpose="Misc aliases and triggers that don't belong anywhere else."
   date_written="2012-08-23 19:24:49"
   requires="4.70"
   version="1.0"
   >

</plugin>


<!--  Get our standard constants -->

<include name="constants.lua"/>

<!--  Triggers  -->

<triggers>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^(?P&lt;player&gt;\w+) slips on the treacherous ground and falls (?P&lt;direction&gt;\w+)\.$"
   name="auto_tell_player_fell_gloom"
   regexp="y"
   send_to="0"
   sequence="100"
  >
  <send>tell %&lt;player&gt; You fell %&lt;direction&gt;.</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="You break the surface and find yourself looking upwards at the twinkling stars above a twilit land."
   omit_from_output="n"
   send_to="0"
   sequence="100"
  >
  <send>stand</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="  sparkling maroon. This gem must then be placed within the inset of an"
   omit_from_output="y"
   send_to="2"
   sequence="100"
  >
  <send>%0 - (cc ring, requires garnet)</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="  green colour is cast upon its surroundings when touched by illumination."
   omit_from_output="y"
   send_to="2"
   sequence="100"
  >
  <send>%0 - (remp ring, requires emerald)</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="  blue glow emanates from deep within. This gem must then be placed within the"
   omit_from_output="y"
   send_to="2"
   sequence="100"
  >
  <send>%0 - (scout ring, requires opal)</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="  hardness and rare blue transparency give off a vitreous luster. This gem"
   omit_from_output="y"
   send_to="2"
   sequence="100"
  >
  <send>%0 - (strength ring, requires topaz)</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="  red glow seems to capture and absorb all illumination surrounding it. This"
   omit_from_output="y"
   send_to="2"
   sequence="100"
  >
  <send>%0 - (mana ring, requires ruby)</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^A citizen mercenary (?:\(\w+\) )?(?:snuffs|lights) a lantern\.$"
   name="omit_merc_lanterns"
   omit_from_output="y"
   regexp="y"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^[ ]{4}[:][ ]{26}[*]{2}[ ]{5}(?P&lt;direction&gt; [NEW]|S[EW])[ ]{4}[*]{2}[ ]{29}[:][ ]{3}$"
   name="auto_move_stakes"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
if auto_move_stakes then
	move_stakes(string.strip("%&lt;direction&gt;"))
	auto_move_stakes = false
end
  </send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^Several glyphs have been carved into the oaken rod\. Some symbols are larger and more finely detailed than the others\: a (?P&lt;first&gt;[^\,]+)\, a (?P&lt;second&gt;[^\,]+)\, and a (?P&lt;third&gt;[^\.]+)\.$"
   name="auto_open_mystical"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
if GLYPHS["%&lt;first&gt;"] and GLYPHS["%&lt;second&gt;"] and GLYPHS["%&lt;third&gt;"] then
	Send("put rod ", GLYPHS["%&lt;first&gt;"])
	Send("put rod ", GLYPHS["%&lt;second&gt;"])
	Send("put rod ", GLYPHS["%&lt;third&gt;"])
end
  </send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^A (?:great\, dark|horrible\, dark-green) spider quickly begins to weave a tight\, sticky web around your body\!$"
   name="bm_spiders1"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>CallPlugin(TTS, "silence")
Note("Flee if solo!")
  </send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^A (?:great\, dark|horrible\, dark-green) spider burdens your movement wrapping you layer after layer\!$"
   name="bm_spiders2"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>CallPlugin(TTS, "silence")
Note("Flee if grouped!")
  </send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^You stagger for your balance as a (?:great\, dark|horrible\, dark-green) spider wraps the sticky cords faster and faster around you\!$"
   name="bm_spiders3"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>CallPlugin(TTS, "silence")
Note("Narrate for help!")
  </send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^After some struggle you remove the last web on you\.$"
   name="bm_spiders4"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>CallPlugin(TTS, "silence")
Note("Web removed!")
  </send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^(?:There is an old street\-lamp on the border of the street|A finely crafted crystal lamp is here|A finely crafted crystal lamp is hanging from a tree branch)\.$"
   name="gag_street_lamps"
   omit_from_output="y"
   regexp="y"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^(?:You quietly scout \w+\.\.|You stop scouting)\.$"
   name="gag_scouting_start_stop"
   omit_from_output="y"
   regexp="y"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^(?:You grasp the corpse and start dragging it\.|You are already dragging it\!)$"
   name="auto_drag_next"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>
if auto_drag then
	auto_drag_counter = auto_drag_counter + 1
	Send(string.format("drag %s.corpse", auto_drag_counter))
else
	Note("%0")
end
  </send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^You do not see anything like that\.$"
   name="auto_drag_complete"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>
if auto_drag then
	Note("Now dragging all corpses.")
	auto_drag_counter = 1
	auto_drag = false
else
	Note("%0")
end
  </send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^(?P&lt;player&gt;.+?) joins (?P&lt;tank&gt;.+?)'s fight\.$"
   name="shorten_assists"
   omit_from_output="y"
   regexp="y"
   send_to="2"
   sequence="100"
  >
  <send>%&lt;player&gt; assists %&lt;tank&gt;!</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^(?P&lt;someone&gt;.+?) leaves (?P&lt;direction&gt;north|east|south|west|up|down)\.$"
   name="shorten_leaves_message"
   omit_from_output="y"
   regexp="y"
   send_to="2"
   sequence="80"
  >
  <send>%&lt;direction&gt; %&lt;someone&gt;</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^(?:Last login [1]?\d hour[s]? ago|Is playing) from \*\.(?P&lt;alpha2&gt;[a-z]{2,2})\.$"
   name="translate_country_codes"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>
if country_codes["%&lt;alpha2&gt;"] then
	Note(string.format("%0 (%s)", country_codes["%&lt;alpha2&gt;"]))
else
	Note("%0")
end
  </send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="You have been idle, and are pulled into a void."
   name="no_void"
   sequence="100"
  >
  <send>wake
stand
lead
train all</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^ACK\! .+? didn\'t follow you\, you lost (him|her|it)\.$"
   name="beep_on_ack"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Tell("\a")</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^(Nah\.\.\. You feel too relaxed to do that\.|Maybe you should get on your feet first\?|You can\'t do this sitting\!|You can\'t concentrate enough while resting\.|Not from your present position\!)$"
   name="auto_stand"
   regexp="y"
   sequence="100"
  >
  <send>stand</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="Prompt set to None."
   name="always_show_prompt"
   sequence="100"
  >
  <send>change prompt all</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^(?:Prompt set to All|Your prompt will display twiddlers when you are busy)\.$"
   name="keep_twiddlers_off"
   sequence="100"
   regexp="y"
  >
  <send>change prompt twiddlers</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="You can only gain one level at a time... Reduced experience."
   name="beep_on_reduced_xp"
   send_to="12"
   sequence="100"
  >
  <send>Tell("\a")</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_misc"
   match="^(Welcome to the land of Middle\-earth\. May your visit here be\.\.\. interesting\.|Reconnecting\.)$"
   name="do_stuff_after_login"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
-- Negotiate echo back on.
-- If this is not done, command history in MushClient won't work.
SendPkt(string.char(255, 253, 1))
Send("change compact on")
Send("change spam off")
Send("change brief on")
Send("change wordwrap off")
Send("change prompt all")</send>
  </trigger>
</triggers>

<!--  Aliases  -->

<aliases>
  <alias
   name="get_new_unique_id"
   match="newid"
   enabled="y"
   group="mume_misc"
   send_to="12"
   sequence="100"
  >
  <send>
local new_id = GetUniqueID()
SetClipboard(new_id)
Note(string.format("%s copied to clipboard.", new_id))
  </send>
  </alias>
  <alias
   name="show_level"
   match="lev"
   enabled="y"
   group="mume_misc"
   send_to="12"
   sequence="100"
  >
  <send>Send("info %l")</send>
  </alias>
  <alias
   name="drag_all"
   match="dragall"
   enabled="y"
   group="mume_misc"
   send_to="12"
   sequence="100"
  >
  <send>
auto_drag = true
auto_drag_counter = 1
Send("drag 1.corpse")
  </send>
  </alias>
  <alias
   name="move_stakes"
   match="movestakes"
   enabled="y"
   group="mume_misc"
   ignore_case="y"
   send_to="12"
   sequence="100"
  >
  <send>
auto_move_stakes = true
Send("look star")
  </send>
  </alias>
  <alias
   name="butcher_corpses"
   match="^bc(?:\s*(?P&lt;digit&gt;\d+))?$"
   enabled="y"
   group="mume_misc"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Send(string.format("butcher %s.corpse", "%&lt;digit&gt;" ~= "" and "%&lt;digit&gt;" or "1"))</send>
  </alias>
  <alias
   name="money_info"
   match="money"
   enabled="y"
   group="mume_misc"
   sequence="100"
  >
  <send>info %%r</send>
  </alias>
  <alias
   name="affected_by_info"
   match="affect"
   enabled="y"
   group="mume_misc"
   sequence="100"
  >
  <send>info %%f</send>
  </alias>
  <alias
   name="age_info"
   match="age"
   enabled="y"
   group="mume_misc"
   sequence="100"
  >
  <send>info %%a years, %%N months, and %%n days old. Played for %%P hours realtime.</send>
  </alias>
  <alias
   name="alignment_info"
   match="align"
   enabled="y"
   group="mume_misc"
   sequence="100"
  >
  <send>info %%q</send>
  </alias>
  <alias
   name="citizen_list_info"
   match="citizen"
   enabled="y"
   group="mume_misc"
   sequence="100"
  >
  <send>info %%c</send>
  </alias>
  <alias
   name="weight_carried_info"
   match="weight"
   enabled="y"
   group="mume_misc"
   sequence="100"
  >
  <send>info %%C, %%F</send>
  </alias>
  <alias
   name="look_in"
   match="li *"
   enabled="y"
   group="mume_misc"
   sequence="100"
  >
  <send>look in %1</send>
  </alias>
  <alias
   name="switch_cloak_from_pouch"
   match="cpouch"
   enabled="y"
   group="mume_misc"
   sequence="100"
  >
  <send>remove cloak
remove fur
get cloak pouch
wear cloak
put cloak pouch
put fur pouch</send>
  </alias>
  <alias
   name="switch_fur_from_pack"
   match="fpack"
   enabled="y"
   group="mume_misc"
   sequence="100"
  >
  <send>remove cloak
remove fur
get fur pack
wear fur
put cloak pack
put fur pack</send>
  </alias>
  <alias
   name="wake_stand"
   match="ws"
   enabled="y"
   group="mume_misc"
   sequence="100"
  >
  <send>wake
stand</send>
  </alias>
  <alias
   name="Switch_cloak_from_pack"
   match="cpack"
   enabled="y"
   group="mume_misc"
   sequence="100"
  >
  <send>remove cloak
remove fur
get cloak pack
wear cloak
put cloak pack
put fur pack</send>
  </alias>
  <alias
   name="switch_boots_from_pouch"
   match="bpouch"
   enabled="y"
   group="mume_misc"
   sequence="100"
  >
  <send>remove boots
get boots pouch
wear boots
put boots pouch</send>
  </alias>
  <alias
   name="switch_boots_from_pack"
   match="bpack"
   enabled="y"
   group="mume_misc"
   sequence="100"
  >
  <send>remove boots
get boots backpack
wear boots
put boots backpack</send>
  </alias>
  <alias
   name="switch_belt_from_pack"
   match="belt"
   enabled="y"
   group="mume_misc"
   sequence="100"
  >
  <send>remove belt
get belt backpack
wear belt
put belt backpack
wear all</send>
  </alias>
  <alias
   name="use_str_ring"
   match="string"
   enabled="y"
   group="mume_misc"
   sequence="100"
  >
  <send>remove ring
get topaz-ring backpack
wear topaz-ring
use ring
remove topaz-ring
put topaz-ring backpack
wear ring</send>
  </alias>
  <alias
   name="use_pipe"
   match="pipe"
   enabled="y"
   group="mume_misc"
   sequence="100"
  >
  <send>get pipe backpack
wield pipe
rest
smoke pipe
stand
remove pipe
put pipe backpack</send>
  </alias>
</aliases>

<script>
<![CDATA[
require("mystdlib")
json = require("dkjson")
TTS = "925cdd0331023d9f0b8f05a7"
COUNTRY_CODES_FILE = string.format("%sdatabases\\country_codes.json", GetInfo(67))

if os.isFile(COUNTRY_CODES_FILE) then
	fileObj = io.open(COUNTRY_CODES_FILE, "rb")
	country_codes = json.decode(fileObj:read("*all"), 1, nil)
	fileObj:close()
else
	country_codes = {}
end

GLYPHS = {
	["sprig of mistletoe"] = "wedding",
	["tree"] = "hunt",
	["flame"] = "battle",
	["cloud"] = "river",
	["star"] = "mountain",
	["harp"] = "feast",
	["crown"] = "funeral"
}

auto_move_stakes = false
auto_drag = false
auto_drag_counter = 1

function move_stakes(direction)
	local directions = {"N", "E", "SE", "SW", "W"}
	local offset = table.index(directions, direction)
	if not offset then
		Note(string.format("Error: invalid direction '%s'.", direction))
		return
	end
	local stakes = {"Forostar", "Orrostar", "Hyarrostar", "Hyarnustar", "Andustar"}
	-- Mittalmar is always in the center.
	Send("move Mittalmar centre")
	for i, stake in ipairs(stakes) do
		local oriented = (i - offset) % table.getn(directions) + 1
		Send(string.format("move %s %s", stake, directions[oriented]))
	end
end

]]>
</script>

</muclient>
