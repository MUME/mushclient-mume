<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- This Source Code Form is subject to the terms of the Mozilla Public -->
<!-- License, v. 2.0. If a copy of the MPL was not distributed with this -->
<!-- file, You can obtain one at http://mozilla.org/MPL/2.0/. -->

<!-- Saved on Tuesday, June 19, 2012, 9:15 PM -->
<!-- MuClient version 4.81 -->

<!-- Plugin "mume_doors" generated by Plugin Wizard -->

<muclient>
<plugin
   name="mume_doors"
   author="Nick Stockton"
   id="8d6f0aa8ea88d5fc6f5e07d1"
   language="Lua"
   purpose="Aliases for handling doors, and auto open doors when you run in to them."
   date_written="2012-06-19 21:12:02"
   requires="4.70"
   version="1.1"
   >

</plugin>


<!--  Get our standard constants -->

<include name="constants.lua"/>

<!--  Triggers  -->

<triggers>
  <trigger
   enabled="y"
   group="mume_doors"
   match="^Doors: (?P&lt;doors&gt;[\w\s:,]+)$"
   name="capture_doors"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
for direction, door in string.gmatch("%&lt;doors&gt;", "(%w+):%s+(%w+)") do
	room_doors[string.match(direction, "^%w")] = door
end
  </send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_doors"
   match="^The (\w+) seem[s]? to be closed\.$"
   name="auto_open"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
if auto_open then
	Send("open %1")
end
  </send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_doors"
   match="^(?:You skillfully discover a hidden (\w+)|The (\w+) (?:is|are) (?:open|closed))\.$"
   name="auto_set_door"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
if auto_open then
	-- door_name = "%1"
end
  </send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_doors"
   match="The irondoor swings shut."
   name="auto_open_nagash"
   send_to="12"
   sequence="100"
  >
  <send>
if auto_open then
	Send("open irondoor")
end
  </send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_doors"
   match="Mordrath the Uroth-Ghash closes the wall."
   name="auto_open_mordrath"
   send_to="12"
   sequence="100"
  >
  <send>
if auto_open then
	Send("open wall")
end
  </send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_doors"
   match="Ushurg the albino Beorning closes the stonehinge."
   name="auto_open_ushurg"
   send_to="12"
   sequence="100"
  >
  <send>
if auto_open then
	Send("open stonehinge")
end
  </send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_doors"
   match="^An ebon wraith closes the (\w+)\.$"
   name="auto_open_ebon"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
if auto_open then
	Send("open %1")
end
  </send>
  </trigger>
</triggers>

<!--  Aliases  -->

<aliases>
  <alias
   name="door_action"
   match="^d(?P&lt;action&gt;[bcklopru])\s*(?P&lt;direction&gt;[neswud])?$"
   enabled="y"
   group="mume_doors"
   regexp="y"
   ignore_case="y"
   send_to="12"
   sequence="100"
  >
  <send>
local action = DOOR_ACTIONS[string.lower("%&lt;action&gt;")]
local direction = string.lower("%&lt;direction&gt;")
Send(string.format("%s %s %s", action, door_name ~= "" and door_name or room_doors[direction] or "exit", direction))
  </send>
  </alias>
  <alias
   name="door_set"
   match="^door(?:\s+(?P&lt;name&gt;.*))?$"
   enabled="y"
   group="mume_doors"
   regexp="y"
   ignore_case="y"
   send_to="12"
   sequence="100"
  >
  <send>
local text = string.lower(string.strip("%&lt;name&gt;"))
if text == "" then
	if door_name == "" then
		Note("Door undefined.")
	else
		Note(door_name, " is set.")
	end
else
	if text == "clear" then
		door_name = ""
		Note("Door cleared.")
	else
		door_name = text
		Note(text, " set.")
	end
end
  </send>
  </alias>
  <alias
   name="toggle_auto_open"
   match="autoopen"
   enabled="y"
   group="mume_doors"
   regexp="n"
   ignore_case="y"
   send_to="12"
   sequence="100"
  >
  <send>
auto_open = not auto_open
Note(string.format("Auto open doors %s.", auto_open and "on" or "off"))
  </send>
  </alias>
</aliases>

<!--  Script  -->


<script>
<![CDATA[
require("mystdlib")
XML_PARSER = "74834d3734b2c8a3a9da4d18"

BROADCAST_MOVEMENT = 2
DOOR_ACTIONS = {
	["b"] = "bash",
	["c"] = "close",
	["k"] = "cast 'block door'",
	["l"] = "lock",
	["o"] = "open",
	["p"] = "pick",
	["r"] = "cast 'break door'",
	["u"] = "unlock"
}

auto_open = true
door_name = ""
room_doors = {}

function OnPluginBroadcast (msg, id, name, text)
	if id == XML_PARSER and name == "mume_xml_parser" and msg == BROADCAST_MOVEMENT then
		table.clear(room_doors)
	end
end

]]>
</script>


</muclient>
