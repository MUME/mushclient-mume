<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- This Source Code Form is subject to the terms of the Mozilla Public -->
<!-- License, v. 2.0. If a copy of the MPL was not distributed with this -->
<!-- file, You can obtain one at http://mozilla.org/MPL/2.0/. -->

<!-- Saved on Friday, August 31, 2012, 2:44 PM -->
<!-- MuClient version 4.81 -->

<!-- Plugin "mume_grouping" generated by Plugin Wizard -->

<muclient>
<plugin
   name="mume_grouping"
   author="Nick Stockton"
   id="dba9ba6174fc543a32b2e516"
   language="Lua"
   purpose="Auto-ride, ETC."
   date_written="2012-08-31 14:43:04"
   requires="4.70"
   version="1.0"
   >

</plugin>


<!--  Get our standard constants -->

<include name="constants.lua"/>

<!--  Triggers  -->

<triggers>
  <trigger
   enabled="y"
   group="mume_grouping"
   match="^(?P&lt;player&gt;\w+)(?: \(\w+\))? picks up a (?:pony|dales-pony|horse|warhorse|pack horse|trained horse|horse of the Rohirrim|brown donkey|mountain mule|hungry warg|brown wolf)(?: \(\w+\))?\'s reins and starts riding (?:him|her|it)\.$"
   name="autoride"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if "%&lt;player&gt;"==leader and auto_ride then Send("ride") end</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_grouping"
   match="^(?P&lt;player&gt;\w+)(?: \(\w+\))? panics\, and attempts to flee\.$"
   name="leader_flees"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if "%&lt;player&gt;" == leader then Tell("\a") end</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_grouping"
   match="^(?P&lt;player&gt;\w+)(?: \(\w+\))? reaches up and tries to climb the ladder\.$"
   name="follow_leader_flets"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if "%&lt;player&gt;"==leader and auto_ride then Send("climb ladder") end</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_grouping"
   match="^ZBLAM\! A (?P&lt;mount&gt;pony|dales-pony|horse|warhorse|pack horse|trained horse|horse of the Rohirrim|brown donkey|mountain mule|hungry warg|brown wolf)(?P&lt;label&gt; \(\w+\))? doesn\'t want you riding (?:him|her|it) anymore\.$"
   name="autoremount"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local mount = "%&lt;mount&gt;"
local label = "%&lt;label&gt;"~="" and "%&lt;label&gt;" or nil
if label then
	mount = string.match(label, "[^)( ]+")
elseif string.match(mount, "Rohirrim") then
	mount = "rohirrim"
elseif string.match(mount, "donkey") then
	mount = "donkey"
elseif string.match(mount, "mule") then
	mount = "mule"
else
	mount = string.match(mount, "%S+")
end
if auto_ride then
	Send("stand")
	Send("lead "..mount)
	Send("ride "..mount)
end</send>
  </trigger>
  <trigger
   name="autogroup1"
   match="^(?P&lt;player&gt;\w+)(?: \(\w+\))? raises (?:his|her|its) (?:hand|paw)\.$"
   enabled="y"
   group="mume_grouping"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if auto_group then Send("group %&lt;player&gt;") end</send>
  </trigger>
  <trigger
   name="autogroup2"
   match="^(?P&lt;player&gt;\w+)(?: \(\w+\))? is (?:a group leader\!|in another group already\.)$"
   enabled="y"
   group="mume_grouping"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if auto_group then Send("tell %&lt;player&gt; You are in another group already.  If you wish to join, please 'group self' and 'raise' again.") end</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_grouping"
   match="^(?:\w+(?: \(\w+\))? transfers group leadership to you\.|You leave the group\.|Group disbanded\.|What group\?\!|You are no longer a member of the group\!|You can\'t group with yourself\.)$"
   name="undefine_leader1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>leader = nil</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_grouping"
   match="^(?P&lt;player&gt;\w+)(?: \(\w+\))? disbands (?:his|her) group\.$"
   name="undefine_leader2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if "%&lt;player&gt;" == leader then leader = nil end</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_grouping"
   match="^You are now a member of (?P&lt;player&gt;\w+)(?: \(\w+\))?\'s group\.$"
   name="define_leader1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>leader = "%&lt;player&gt;"</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_grouping"
   match="^You transfer group leadership to (?P&lt;player&gt;\w+)(?: \(\w+\))?\.$"
   name="define_leader2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>leader = "%&lt;player&gt;"</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_grouping"
   match="^     (?P&lt;player&gt;\w+) \(Head of group\)$"
   name="define_leader3"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>leader = "%&lt;player&gt;"</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_grouping"
   match="^(?P&lt;player&gt;\w+)(?: \(\w+\))? dismounts from a (?:pony|dales-pony|horse|warhorse|pack horse|trained horse|horse of the Rohirrim|brown donkey|mountain mule|hungry warg|brown wolf)(?: \(\w+\))?\, and stops riding (?:him|her|it)\.$"
   name="autolead"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if "%&lt;player&gt;"==leader and auto_ride then Send("lead") end</send>
  </trigger>
</triggers>

<!--  Aliases  -->

<aliases>
  <alias
   name="tell_leader_message"
   match="^lt(?P&lt;message&gt; .+)?$"
   enabled="y"
   group="mume_grouping"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local message = string.strip("%&lt;message&gt;")
if not leader then
	CallPlugin(screenReader, "sayNote", NO_LEADER_MESSAGE)
elseif not message then
	CallPlugin(screenReader, "sayNote", string.format("Tell %s what?", leader))
else
	Send(string.format("tell %s %s", leader, message))
end</send>
  </alias>
  <alias
   name="protect_leader"
   match="lp"
   enabled="y"
   group="mume_grouping"
   send_to="12"
   sequence="100"
  >
  <send>actionLeader("protect")</send>
  </alias>
  <alias
   name="define_leader"
   match="^leader(?P&lt;name&gt; \w+)?$"
   enabled="y"
   group="mume_grouping"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local name = string.capitalize(string.strip("%&lt;name&gt;"))
if name == "clear" then
	leader = nil
	CallPlugin(screenReader, "sayNote", "Leader cleared.")
elseif name ~= "" then
	leader = name
	CallPlugin(screenReader, "sayNote", string.format("Setting leader to %s.", leader))
elseif leader then
	CallPlugin(screenReader, "sayNote", string.format("Your leader is %s.", leader))
else
	CallPlugin(screenReader, "sayNote", NO_LEADER_MESSAGE)
end</send>
  </alias>
  <alias
   name="follow_self"
   match="fs"
   enabled="y"
   group="mume_grouping"
   sequence="100"
  >
  <send>follow self</send>
  </alias>
  <alias
   name="toggle_autoride"
   match="autoride"
   enabled="y"
   group="mume_grouping"
   send_to="12"
   sequence="100"
  >
  <send>toggle("autoride")</send>
  </alias>
  <alias
   name="whois_leader"
   match="lw"
   enabled="y"
   group="mume_grouping"
   send_to="12"
   sequence="100"
  >
  <send>actionLeader("whois")</send>
  </alias>
  <alias
   name="rescue_leader"
   match="lr"
   enabled="y"
   group="mume_grouping"
   send_to="12"
   sequence="100"
  >
  <send>actionLeader("rescue")</send>
  </alias>
  <alias
   name="follow_leader"
   match="lf"
   enabled="y"
   group="mume_grouping"
   send_to="12"
   sequence="100"
  >
  <send>actionLeader("follow")</send>
  </alias>
  <alias
   name="toggle_autogroup"
   match="autogroup"
   enabled="y"
   group="mume_grouping"
   send_to="12"
   sequence="100"
  >
  <send>toggle("autogroup")</send>
  </alias>
</aliases>

<!--  Script  -->

<script>
<![CDATA[
require("mystdlib")

screenReader = "925cdd0331023d9f0b8f05a7"

NO_LEADER_MESSAGE = "Leader undefined."
auto_ride = true
auto_group = false
leader = nil

function actionLeader(action)
	if not action then
		CallPlugin(screenReader, "sayNote", "Do what to leader?")
	elseif leader then
		Send(string.format("%s %s", action, leader))
	else
		CallPlugin(screenReader, "sayNote", NO_LEADER_MESSAGE)
	end
end

function toggle(setting)
	if setting == "autoride" then
		auto_ride = auto_ride ~= true
		CallPlugin(screenReader, "sayNote", string.format("Auto ride %s.", auto_ride and "enabled" or "disabled"))
	elseif setting == "autogroup" then
		auto_group = auto_group ~= true
		CallPlugin(screenReader, "sayNote", string.format("Auto group %s.", auto_group and "enabled" or "disabled"))
	end
end

]]>
</script>

</muclient>
