<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- This Source Code Form is subject to the terms of the Mozilla Public -->
<!-- License, v. 2.0. If a copy of the MPL was not distributed with this -->
<!-- file, You can obtain one at http://mozilla.org/MPL/2.0/. -->

<!-- Saved on Friday, August 31, 2012, 2:44 PM -->
<!-- MuClient version 4.81 -->

<!-- Plugin "mume_grouping" generated by Plugin Wizard -->

<muclient>
<plugin
   name="mume_grouping"
   author="Nick Stockton"
   id="dba9ba6174fc543a32b2e516"
   language="Lua"
   purpose="Auto-ride, ETC."
   date_written="2012-08-31 14:43:04"
   requires="4.70"
   version="1.0"
   >

</plugin>


<!--  Get our standard constants -->

<include name="constants.lua"/>

<!--  Triggers  -->

<triggers>
  <trigger
   enabled="y"
   group="mume_grouping"
   match="^(?P&lt;player&gt;\w+)(?: \(\w+\))? examines the terrain intently\.$"
   name="auto_reveal1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
if "%&lt;player&gt;" == leader and auto_ride then
	Send("reveal thorough")
end
  </send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_grouping"
   match="^(?P&lt;player&gt;\w+)(?: \(\w+\))? puts all (?:his|her|its) weight against the (?P&lt;door&gt;\w+)\, trying to (?P&lt;action&gt;close|open) (?:it|them)\.$"
   name="auto_assist_leader_doors1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
if "%&lt;player&gt;" == leader and auto_ride then
	Send("%&lt;action&gt; %&lt;door&gt;")
end
  </send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_grouping"
   match="^(?P&lt;player&gt;\w+)(?: \(\w+\))? tries to help the (?P&lt;door&gt;\w+)(?:&apos;[s]?)? movement as (?:it|they) (?P&lt;action&gt;close|open)[s]?\.$"
   name="auto_assist_leader_doors2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
if "%&lt;player&gt;" == leader and auto_ride then
	Send("%&lt;action&gt; %&lt;door&gt;")
end
  </send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_grouping"
   match="^(?P&lt;player&gt;\w+)(?: \(\w+\))? starts moving aside the heavy rocks\.\.\.$"
   name="auto_assist_leader_doors3"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
if "%&lt;player&gt;" == leader and auto_ride then
	Send("open rockslide")
end
  </send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_grouping"
   match="^(?P&lt;player&gt;\w+)(?: \(\w+\))? (?:picks up|grabs on to) a (?:pony|dales-pony|horse|warhorse|pack horse|trained horse|horse of the Rohirrim|brown donkey|mountain mule|hungry warg|brown wolf)(?: \(\w+\))?&apos;s (?:reins|fur) and starts riding (?:him|her|it)\.$"
   name="autoride"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
if "%&lt;player&gt;" == leader and auto_ride then
	if leader_zblammed then
		leader_zblammed = false
	else
		Send("ride")
	end
end
  </send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_grouping"
   match="^(?P&lt;player&gt;\w+)(?: \(\w+\))? panics\, and attempts to flee\.$"
   name="leader_flees"
   regexp="y"
   omit_from_output="y"
   send_to="14"
   sequence="100"
  >
  <send>Note("%&lt;player&gt;" == leader and "\a" or "", "%0")</send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_grouping"
   match="^(?P&lt;player&gt;\w+)(?: \(\w+\))? reaches up and tries to climb the ladder\.$"
   name="follow_leader_flets"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
if "%&lt;player&gt;"==leader and auto_ride then
	Send("climb ladder")
end
  </send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_grouping"
   match="^ZBLAM\! A (?P&lt;mount&gt;pony|dales-pony|horse|warhorse|pack horse|trained horse|horse of the Rohirrim|brown donkey|mountain mule|hungry warg|brown wolf) (?:\((?P&lt;label&gt;\w+)\) )?doesn&apos;t want you riding (?:him|her|it) anymore\.$"
   name="autoremount"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
local mount = "%&lt;mount&gt;"
if "%&lt;label&gt;" ~= "" then
	mount = "%&lt;label&gt;"
elseif mount:findpos("Rohirrim") then
	mount = "rohirrim"
elseif mount:findpos("donkey") then
	mount = "donkey"
elseif mount:findpos("mule") then
	mount = "mule"
else
	-- Use the first word in the string (hungry for hungry warg, pack for pack horse, etc).
	mount = string.match(mount, "%S+")
end
if auto_ride then
	Send("stand")
	Send("ride ", mount)
end
  </send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_grouping"
   match="^ZBLAM\! A (?:pony|dales-pony|horse|warhorse|pack horse|trained horse|horse of the Rohirrim|brown donkey|mountain mule|hungry warg|brown wolf) (?:\(\w+\) )?sends (?P&lt;player&gt;\w+) (?:\(\w+\) )?(?:flying|across the dancefloor)\!$"
   name="player_zblammed"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
if "%&lt;player&gt;" == leader and auto_ride then
	leader_zblammed = true
end
  </send>
  </trigger>
  <trigger
   name="autogroup1"
   match="^(?P&lt;player&gt;\w+)(?: \(\w+\))? raises (?:his|her|its) (?:hand|paw)\.$"
   enabled="y"
   group="mume_grouping"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
if auto_group then
	Send("group %&lt;player&gt;")
end
  </send>
  </trigger>
  <trigger
   name="autogroup2"
   match="^(?P&lt;player&gt;\w+)(?: \(\w+\))? is (?:a group leader\!|in another group already\.)$"
   enabled="y"
   group="mume_grouping"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
if auto_group then
	Send("tell %&lt;player&gt; Auto-tell: You are in another group already. If you wish to join, please 'group self' and 'raise' again.")
else
	Send("tell %&lt;player&gt; Auto-tell: I was unable to add you to my group. If you wish to join, please 'group self'.")
end
  </send>
  </trigger>
  <trigger
   name="define_leader1"
   match="^You now follow (?P&lt;player&gt;\w+)\.$"
   enabled="y"
   group="mume_grouping"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
if leader ~= "%&lt;player&gt;" then
	leader = "%&lt;player&gt;"
	Note("Setting leader to ", leader, ".")
end
  </send>
  </trigger>
  <trigger
   name="define_leader2"
   match="^You are now a member of (?P&lt;player&gt;\w+)(?: \(\w+\))?(?:&apos;[s]?) group\.$"
   enabled="y"
   group="mume_grouping"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
if not leader then
	leader = "%&lt;player&gt;"
	Note("Setting leader to ", leader, ".")
end
  </send>
  </trigger>
  <trigger
   name="define_leader3"
   match="^[ ]{5}(?P&lt;player&gt;\w+) \(Head of group\)$"
   enabled="y"
   group="mume_grouping"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
if not leader then
	leader = "%&lt;player&gt;"
	Note("Setting leader to ", leader, ".")
end
  </send>
  </trigger>
  <trigger
   name="undefine_leader"
   match="^(?:You will not follow anyone else now|\w+ doesn&apos;t want you to follow (?:him|her|it))\.$"
   enabled="y"
   group="mume_grouping"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
if leader then
	leader = nil
	Note("Leader cleared.")
end
  </send>
  </trigger>
  <trigger
   name="autolead"
   match="^(?P&lt;player&gt;\w+)(?: \(\w+\))? dismounts from a (?:pony|dales-pony|horse|warhorse|pack horse|trained horse|horse of the Rohirrim|brown donkey|mountain mule|hungry warg|brown wolf)(?: \(\w+\))?\, and stops riding (?:him|her|it)\.$"
   enabled="y"
   group="mume_grouping"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
if "%&lt;player&gt;" == leader and auto_ride and not leader_zblammed then
	Send("lead")
end
</send>
  </trigger>
</triggers>

<!--  Aliases  -->

<aliases>
  <alias
   name="define_leader"
   match="^leader\s*?(?:\s+(?P&lt;name&gt;\w+))?$"
   enabled="y"
   group="mume_grouping"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
local name = string.capitalize("%&lt;name&gt;")
if name == "Clear" then
	leader = nil
	Note("Leader cleared.")
elseif name ~= "" then
	leader = name
	Note("Setting leader to ", leader, ".")
elseif leader then
	Note("Your leader is ", leader, ".")
else
	Note(NO_LEADER_MESSAGE)
end
  </send>
  </alias>
  <alias
   name="follow_self"
   match="fs"
   enabled="y"
   group="mume_grouping"
   sequence="100"
  >
  <send>follow self</send>
  </alias>
  <alias
   name="toggle_autogroup"
   match="autogroup"
   enabled="y"
   group="mume_grouping"
   send_to="12"
   sequence="100"
  >
  <send>toggle("autogroup")</send>
  </alias>
  <alias
   name="toggle_autoride"
   match="autoride"
   enabled="y"
   group="mume_grouping"
   send_to="12"
   sequence="100"
  >
  <send>toggle("autoride")</send>
  </alias>
  <alias
   name="tell_leader_message"
   match="^lt(?P&lt;message&gt; .+)?$"
   enabled="y"
   group="mume_grouping"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
local message = string.strip("%&lt;message&gt;")
if not leader then
	Note(NO_LEADER_MESSAGE)
elseif not message then
	Note(string.format("Tell %s what?", leader))
else
	Send(string.format("tell %s %s", leader, message))
end
  </send>
  </alias>
  <alias
   name="protect_leader"
   match="lp"
   enabled="y"
   group="mume_grouping"
   send_to="12"
   sequence="100"
  >
  <send>do_leader("protect")</send>
  </alias>
  <alias
   name="whois_leader"
   match="lw"
   enabled="y"
   group="mume_grouping"
   send_to="12"
   sequence="100"
  >
  <send>do_leader("whois")</send>
  </alias>
  <alias
   name="rescue_leader"
   match="lr"
   enabled="y"
   group="mume_grouping"
   send_to="12"
   sequence="100"
  >
  <send>do_leader("rescue")</send>
  </alias>
  <alias
   name="follow_leader"
   match="lf"
   enabled="y"
   group="mume_grouping"
   send_to="12"
   sequence="100"
  >
  <send>do_leader("follow")</send>
  </alias>
</aliases>

<!--  Script  -->

<script>
<![CDATA[
require("mystdlib")

NO_LEADER_MESSAGE = "Leader undefined."
auto_ride = true
auto_group = false
leader = nil
leader_zblammed = false

function do_leader(action)
	if not action then
		Note("Do what to leader?")
	elseif leader then
		Send(string.format("%s %s", action, leader))
	else
		Note(NO_LEADER_MESSAGE)
	end
end

function toggle(setting)
	if setting == "autoride" then
		auto_ride = not auto_ride
		Note(string.format("Auto ride %s.", auto_ride and "enabled" or "disabled"))
	elseif setting == "autogroup" then
		auto_group = not auto_group
		Note(string.format("Auto group %s.", auto_group and "enabled" or "disabled"))
	end
end

]]>
</script>

</muclient>
