<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- This Source Code Form is subject to the terms of the Mozilla Public -->
<!-- License, v. 2.0. If a copy of the MPL was not distributed with this -->
<!-- file, You can obtain one at http://mozilla.org/MPL/2.0/. -->

<!-- Saved on Sunday, June 17, 2012, 11:04 PM -->
<!-- MuClient version 4.81 -->

<!-- Plugin "mume_hunting" generated by Plugin Wizard -->

<muclient>
<plugin
   name="mume_hunting"
   author="Nick Stockton"
   id="d54f37916d74ac326debe33f"
   language="Lua"
   purpose="Provides a target system and some other useful aliases for hunting on Mume"
   date_written="2012-06-17 23:02:12"
   requires="4.70"
   version="1.0"
   >

</plugin>


<!--  Get our standard constants -->

<include name="constants.lua"/>

<!--  Aliases  -->

<aliases>
  <alias
   name="set_target"
   match="^(?P&lt;number&gt;[t]{1,2})\s*?(?:\s+(?P&lt;target&gt;.+))?$"
   enabled="y"
   group="mume_hunting"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>set_target(#"%&lt;number&gt;", "%&lt;target&gt;")</send>
  </alias>
  <alias
   name="set_target_pk"
   match="^(?P&lt;number&gt;[t]{1,2})\s*?(?:\s+(?P&lt;target&gt;[bedahmor]))?$"
   enabled="y"
   group="mume_hunting"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>set_target(#"%&lt;number&gt;", PK_EXPANSIONS["%&lt;target&gt;"])</send>
  </alias>
  <alias
   name="set_action"
   match="^ac(?:\s*(?P&lt;number&gt;\d*))?\s*?(?:\s+(?P&lt;action&gt;.+))?$"
   enabled="y"
   group="mume_hunting"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>set_action("%&lt;number&gt;", "%&lt;action&gt;")</send>
  </alias>
  <alias
   name="kill_target_pk"
   match="^k(?P&lt;target&gt;[bedahmor])$"
   enabled="y"
   group="mume_hunting"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Send("kill ", PK_EXPANSIONS["%&lt;target&gt;"])</send>
  </alias>
  <alias
   name="backstab_target"
   match="^(?P&lt;number&gt;[j]{1,2})(?P&lt;flee&gt;[f])?$"
   enabled="y"
   group="mume_hunting"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
do_action(#"%&lt;number&gt;", "backstab")
if "%&lt;flee&gt;" == "f" then
	Send("flee")
end
  </send>
  </alias>
  <alias
   name="shoot_target"
   match="^(?P&lt;number&gt;[h]{1,2})(?P&lt;flee&gt;[f])?$"
   enabled="y"
   group="mume_hunting"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
do_action(#"%&lt;number&gt;", "shoot")
if "%&lt;flee&gt;" == "f" then
	Send("flee")
end
  </send>
  </alias>
  <alias
   name="kill_target"
   match="^(?P&lt;number&gt;[k]{1,2})(?P&lt;flee&gt;[f])?$"
   enabled="y"
   group="mume_hunting"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
do_action(#"%&lt;number&gt;", "kill")
if "%&lt;flee&gt;" == "f" then
	Send("flee")
end
  </send>
  </alias>
  <alias
   name="bash_target"
   match="^(?P&lt;number&gt;[b]{1,2})(?P&lt;dis&gt;[d])?(?P&lt;flee&gt;[f])?$"
   enabled="y"
   group="mume_hunting"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
do_action(#"%&lt;number&gt;", "%&lt;dis&gt;" == "d" and "bash dis" or "bash")
if "%&lt;flee&gt;" == "f" then
	Send("flee")
end
  </send>
  </alias>
  <alias
   name="examine_target"
   match="^(?P&lt;number&gt;[e]{1,2})t$"
   enabled="y"
   group="mume_hunting"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>do_action(#"%&lt;number&gt;", "examine")</send>
  </alias>
  <alias
   name="track_target"
   match="^(?P&lt;number&gt;[.]{1,2})$"
   enabled="y"
   group="mume_hunting"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>do_action(#"%&lt;number&gt;", "track")</send>
  </alias>
  <alias
   name="where_target"
   match="^(?P&lt;number&gt;[,]{1,2})$"
   enabled="y"
   group="mume_hunting"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>do_action(#"%&lt;number&gt;", "where")</send>
  </alias>
</aliases>

<!--  Script  -->


<script>
<![CDATA[
require("mystdlib")

PK_EXPANSIONS = {
	["b"] = "*bear*",
	["e"] = "*elf*",
	["d"] = "*dwarf*",
	["a"] = "*half-elf*",
	["h"] = "*hobbit*",
	["m"] = "*man*",
	["o"] = "*orc*",
	["r"] = "*troll*"
}

actions = {}
targets = {}

function do_action(target, action)
	if not targets[target] then
		Note("Target ", target, " not defined.")
	else
		Send(action, " ", targets[target])
	end
end

function do_action_instance(target, action, instance)
	if not actions[action] then
		Note("Action ", action, " not defined.")
	elseif not targets[target] then
		Note("Target ", target, " not defined.")
	else
		Send(actions[action], " ", instance and instance or 1, ".", targets[target])
	end
end

function set_target(number, target)
	local number = tonumber(number) or 1
	local target = target and string.strip(target) or ""
	if target == "c" then
		targets[number] = nil
		Note("Target ", number, " cleared.")
	elseif target ~= "" then
		targets[number] = target
		Note("Target ", number, " now ", target)
	elseif targets[number] then
		Note("Target ", number, " is ", targets[number])
	else
		Note("Target ", number, " undefined.")
	end
end

function set_action(number, action)
	local number = tonumber(number) or 1
	local action = action and string.strip(action) or ""
	if action == "c" then
		actions[number] = nil
		Note("Action ", number, " cleared.")
	elseif action ~= "" then
		actions[number] = action
		Note("Action ", number, " now ", action)
	elseif actions[number] then
		Note("Action ", number, " is ", actions[number])
	else
		Note("Action ", number, " undefined.")
	end
end

]]>
</script>


</muclient>
