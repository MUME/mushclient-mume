<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- This Source Code Form is subject to the terms of the Mozilla Public -->
<!-- License, v. 2.0. If a copy of the MPL was not distributed with this -->
<!-- file, You can obtain one at http://mozilla.org/MPL/2.0/. -->

<!-- Saved on Tuesday, October 4, 2016, 11:29 AM -->
<!-- MuClient version 4.81 -->

<!-- Plugin "mume_auto_enchanting" generated by Plugin Wizard -->

<muclient>
<plugin
   name="mume_auto_enchanting"
   author="Nick Stockton"
   id="1a6a77a2e40643c6b51bb0d2"
   language="Lua"
   purpose="Automate enchanting arrows."
   date_written="2016-10-04 11:29:20"
   requires="4.70"
   version="1.0"
   >

</plugin>


<!--  Get our standard constants -->

<include name="constants.lua"/>

<!--  Triggers  -->

<triggers>
  <trigger
   enabled="y"
   group="mume_auto_enchanting"
   match="^auto_enchant_mana\: (?P&lt;current&gt;[-]?\d+|xxx)/(?P&lt;max&gt;\d+|xxx)$"
   name="check_mana"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
if auto_enchanting and "%&lt;max&gt;" ~= "xxx" and "%&lt;current&gt;" == "%&lt;max&gt;" then
	Send("wake")
	Send("stand")
	Send(string.format("get %s %s", arrow, unchanted_container))
	Send(string.format("cast 'enchant' 2.%s", arrow))
	Send(string.format("compare 1.%s 2.%s", arrow, arrow))
end
  </send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_auto_enchanting"
   match="Both are equally as accurate and inflict equally as much damage."
   name="max_enchant"
   regexp="n"
   send_to="12"
   sequence="100"
  >
  <send>
if auto_enchanting then
	Send(string.format("put %s %s", arrow, chanted_container))
	Send(string.format("look in %s", unchanted_container))
	Send("train all")
	Send("sleep")
end
  </send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_auto_enchanting"
   match="^The first arrow [^\.]+\.$"
   name="not_max_enchant"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
if auto_enchanting then
	Send(string.format("put %s %s", arrow, unchanted_container))
	Send("train all")
	Send("sleep")
end
  </send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_auto_enchanting"
   match="Nothing."
   name="unchanted_container_empty"
   regexp="n"
   send_to="12"
   sequence="100"
  >
  <send>
if auto_enchanting then
	auto_enchanting = false
	EnableTimer("auto_enchant_mana_timer", auto_enchanting)
	ResetTimer("auto_enchant_mana_timer")
	Note("Enchanting complete!")
end
  </send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_auto_enchanting"
   match="^You exhausted yourself refreshing &apos;[^&apos;]+&apos;\.$"
   name="auto_bob"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
if auto_enchanting then
	Send("wake")
	Send("stand")
	Send("cast 'breath of briskness'")
	Send("sleep")
end
  </send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_auto_enchanting"
   match="^You (?:begin to feel|are) hungry\.$"
   name="auto_eat"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
if auto_enchanting then
	Send("wake")
	Send("stand")
	Send("cast 'create food'")
	Send("get food")
	Send("eat food")
	Send("cast 'create food'")
	Send("get food")
	Send("eat food")
	Send("drop mushroom")
	Send("train all")
	Send("sleep")
end
  </send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_auto_enchanting"
   match="^You (?:begin to feel|are) thirsty\.$"
   name="auto_drink"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
if auto_enchanting then
	Send("wake")
	Send("stand")
	Send("pour water skin")
	Send("drink skin")
	Send("train all")
	Send("sleep")
end
  </send>
  </trigger>
  <trigger
   enabled="y"
   group="mume_auto_enchanting"
   match="^(?:A water skin is now empty|It&apos;s empty already)\.$"
   name="auto_create_water_skin"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
if auto_enchanting then
	Send("wake")
	Send("stand")
	Send("pour water skin")
	Send("cast 'create water' skin")
	Send("drink skin")
	Send("train all")
	Send("sleep")
end
  </send>
  </trigger>
</triggers>

<!--  Aliases  -->

<aliases>
  <alias
   name="auto_chant_toggle"
   match="autochant"
   enabled="y"
   group="mume_auto_enchanting"
   regexp="n"
   send_to="12"
   sequence="100"
  >
  <send>
auto_enchanting = not auto_enchanting
Note(string.format("Auto enchant %s: arrow type: %s, unchanted container: %s, chanted container: %s.", auto_enchanting and "on" or "off", arrow, unchanted_container, chanted_container))
Send("info auto_enchant_mana: %e/%E")
EnableTimer("auto_enchant_mana_timer", auto_enchanting)
ResetTimer("auto_enchant_mana_timer")
  </send>
  </alias>
  <alias
   name="set_chanted_arrow"
   match="^setarrow(?:\s+(?P&lt;arrow&gt;[\w\.]+))?$"
   enabled="y"
   group="mume_auto_enchanting"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
if string.strip("%&lt;arrow&gt;") == "" then
	Note(string.format("Arrow keyword set to %s.", arrow))
else
	arrow = string.strip("%&lt;arrow&gt;")
	Note(string.format("Arrow keyword now set to %s.", arrow))
end
  </send>
  </alias>
  <alias
   name="set_unchanted_container"
   match="^setunchanted(?:\s+(?P&lt;container&gt;[\w\.]+))?$"
   enabled="y"
   group="mume_auto_enchanting"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
if string.strip("%&lt;container&gt;") == "" then
	Note(string.format("Unchanted container set to %s.", unchanted_container))
else
	unchanted_container = string.strip("%&lt;container&gt;")
	Note(string.format("Unchanted container now set to %s.", unchanted_container))
end
  </send>
  </alias>
  <alias
   name="set_chanted_container"
   match="^setchanted(?:\s+(?P&lt;container&gt;[\w\.]+))?$"
   enabled="y"
   group="mume_auto_enchanting"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
if string.strip("%&lt;container&gt;") == "" then
	Note(string.format("Chanted container set to %s.", chanted_container))
else
	chanted_container = string.strip("%&lt;container&gt;")
	Note(string.format("Chanted container now set to %s.", chanted_container))
end
  </send>
  </alias>
</aliases>

<!--  Timers  -->

<timers>
  <timer
   enabled="n" minute="0" second="10.00" offset_second="0.00"    send_to="0"
   name="auto_enchant_mana_timer"
  >
  <send>info auto_enchant_mana: %e/%E</send>
  </timer>
</timers>

<script>
<![CDATA[
require("mystdlib")

auto_enchanting = false
unchanted_container = "1.quiver"
chanted_container = "2.quiver"
arrow = "arrow"

]]>
</script>

</muclient>
